
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR CHAR_DEC CLASS COLON COMMA COMP_AND COMP_EQUAL COMP_GREATER COMP_LESS COMP_NOTEQUAL COMP_OR CTEF CTEI DIVIDE DOT ELSE FILE FLOAT FUN ID IF INCO INHERIT INT LEFTBRACKET LEFTKEY LEFTPAREN MAIN MINUS OUTCO PLUS PRIVATE PROGRAM PUBLIC RETURN RIGHTBRACKET RIGHTKEY RIGHTPAREN SEMICOLON SIGN TIMES VAR VOID WHILEprogram : PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKETdec_vars_mult : dec_vars_idk\n                | emptydec_vars_idk : dec_vars dec_vars_moredec_vars_more : dec_vars_idk\n                    | emptydec_vars : VAR vars SEMICOLONvars : vars_simple \n            | vars_complexvars_simple : type_simple vars_simple_dec vars_simple_dec : vars_simple_id vars_simple_morevars_simple_more : COMMA vars_simple_dec\n                        | emptyvars_simple_id : ID vars_simple_arrvars_simple_arr : LEFTKEY CTEI RIGHTKEY vars_simple_arr2\n                        | emptyvars_simple_arr2 : LEFTKEY CTEI RIGHTKEY\n                        | emptyvars_complex : type_complex vars_complex_dec vars_complex_dec : ID vars_complex_more vars_complex_more : COMMA vars_complex_dec\n                        | emptytype_simple : INT\n            | FLOAT\n            | CHARtype_complex : FILE\n            | IDdec_fun : dec_fun_idk\n                | emptydec_fun_idk : fun dec_fun_moredec_fun_more : dec_vars_idk\n                    | emptyfun : FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_block RETURN dec_exp_method SEMICOLON RIGHTBRACKETparam_pos : param\n                | emptyparam : type_simple ID param_moreparam_more : COMMA param\n                | emptyfun_type : type_simple\n                | VOIDdec_block : block\n                | emptyblock : statement block_moreblock_more : block\n                    | emptystatement : dec_assign\n                        | dec_call\n                        | dec_read\n                        | dec_write\n                        | dec_condition\n                        | dec_cycle\n                        | dec_methoddec_exp : dec_exp_sdec_exp_s : dec_term pm_oppm_op : PLUS dec_exp_s\n                | MINUS dec_exp_s\n                | emptydec_exp_method : dec_exp_s\n                        | emptydec_term : dec_fact md_opmd_op : TIMES dec_term\n                | DIVIDE dec_term\n                | emptydec_fact : var_cte\n                | hyper_callhyper_call : h_exp\n                | LEFTPAREN h_exp RIGHTPARENh_exp : s_exp ao_opao_op : COMP_AND h_exp\n                | COMP_OR h_exp\n                | emptys_exp : dec_exp_s comp_opcomp_op : COMP_LESS s_exp\n                | COMP_GREATER s_exp\n                | COMP_EQUAL s_exp\n                | COMP_NOTEQUAL s_exp\n                | emptydec_class : dec_class_idk\n                    | emptydec_class_idk : class_body dec_class_moredec_class_more : dec_class_idk\n                    | emptyclass_body : CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLONdec_inherit : COLON INHERIT ID\n                    | emptydec_assign : var_id COMP_EQUAL dec_exp SEMICOLONdec_call : ID LEFTPAREN call_pos RIGHTPAREN SEMICOLONcall_pos : call\n                | emptycall : dec_exp call_morecall_more : COMMA call\n                | emptydec_read : INCO LEFTPAREN var_id RIGHTPAREN SEMICOLONdec_write : OUTCO LEFTPAREN write RIGHTPAREN SEMICOLONwrite : dec_exp write_morewrite_more : COMMA write \n                | emptydec_condition : IF LEFTPAREN dec_exp RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_elsedec_else : ELSE LEFTBRACKET dec_block RIGHTBRACKET\n                | emptydec_cycle : WHILE LEFTPAREN dec_exp RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKETdec_method : ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLONvar_cte : var_id\n               | var_constvar_const : CTEI\n               | CTEF\n               | CHAR_DECvar_id : IDfun_id : IDempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,115,],[0,-1,]),'ID':([2,6,7,8,9,15,16,17,21,22,23,24,25,26,27,32,36,37,38,39,53,59,71,75,77,85,87,96,97,98,99,100,101,102,103,113,114,119,120,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,180,184,191,204,205,207,208,215,216,217,219,221,223,225,],[3,-2,-3,-110,27,-4,-5,-6,42,44,-23,-24,-25,-26,-27,49,51,-39,-40,-7,42,44,79,81,-110,92,92,92,-46,-47,-48,-49,-50,-51,-52,126,144,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-86,126,-87,-93,-94,92,92,-102,-110,-101,-98,-100,92,-99,]),'SEMICOLON':([3,18,19,20,40,41,42,43,44,52,54,55,57,58,60,66,68,76,83,84,112,125,126,132,133,134,135,136,137,138,139,140,141,142,143,145,152,153,154,156,157,161,166,167,170,171,174,175,178,181,182,190,193,194,195,196,197,198,199,200,201,202,211,218,],[4,39,-8,-9,-10,-110,-110,-19,-110,-11,-13,-14,-16,-20,-22,-12,-21,-110,-15,-18,-17,-110,-108,-53,-110,-110,-64,-65,-103,-104,-66,-105,-106,-107,-110,180,189,-58,-59,-110,191,-72,-77,-54,-57,-60,-63,-68,-71,204,205,-67,-73,-74,-75,-76,-55,-56,-61,-62,-66,-66,215,222,]),'FUN':([4,5,6,7,8,15,16,17,39,86,109,188,209,],[-110,14,-2,-3,-110,-4,-5,-6,-7,-110,14,-110,14,]),'CLASS':([4,5,6,7,8,10,11,12,13,15,16,17,31,33,34,35,39,210,222,],[-110,-110,-2,-3,-110,32,-28,-29,-110,-4,-5,-6,32,-30,-31,-32,-7,-33,-83,]),'MAIN':([4,5,6,7,8,10,11,12,13,15,16,17,28,29,30,31,33,34,35,39,46,47,48,210,222,],[-110,-110,-2,-3,-110,-110,-28,-29,-110,-4,-5,-6,45,-78,-79,-110,-30,-31,-32,-7,-80,-81,-82,-33,-83,]),'VAR':([4,8,13,39,77,86,188,210,],[9,9,9,-7,9,9,9,-33,]),'INCO':([6,7,8,15,16,17,39,77,85,87,96,97,98,99,100,101,102,103,180,191,204,205,207,208,215,216,217,219,221,223,225,],[-2,-3,-110,-4,-5,-6,-7,-110,105,105,105,-46,-47,-48,-49,-50,-51,-52,-86,-87,-93,-94,105,105,-102,-110,-101,-98,-100,105,-99,]),'OUTCO':([6,7,8,15,16,17,39,77,85,87,96,97,98,99,100,101,102,103,180,191,204,205,207,208,215,216,217,219,221,223,225,],[-2,-3,-110,-4,-5,-6,-7,-110,106,106,106,-46,-47,-48,-49,-50,-51,-52,-86,-87,-93,-94,106,106,-102,-110,-101,-98,-100,106,-99,]),'IF':([6,7,8,15,16,17,39,77,85,87,96,97,98,99,100,101,102,103,180,191,204,205,207,208,215,216,217,219,221,223,225,],[-2,-3,-110,-4,-5,-6,-7,-110,107,107,107,-46,-47,-48,-49,-50,-51,-52,-86,-87,-93,-94,107,107,-102,-110,-101,-98,-100,107,-99,]),'WHILE':([6,7,8,15,16,17,39,77,85,87,96,97,98,99,100,101,102,103,180,191,204,205,207,208,215,216,217,219,221,223,225,],[-2,-3,-110,-4,-5,-6,-7,-110,108,108,108,-46,-47,-48,-49,-50,-51,-52,-86,-87,-93,-94,108,108,-102,-110,-101,-98,-100,108,-99,]),'RIGHTBRACKET':([6,7,8,11,12,13,15,16,17,33,34,35,39,77,85,93,94,95,96,97,98,99,100,101,102,103,116,117,118,180,188,189,191,204,205,207,208,209,210,212,213,214,215,216,217,219,221,223,224,225,],[-2,-3,-110,-28,-29,-110,-4,-5,-6,-30,-31,-32,-7,-110,-110,115,-41,-42,-110,-46,-47,-48,-49,-50,-51,-52,-43,-44,-45,-86,-110,210,-87,-93,-94,-110,-110,-110,-33,216,217,218,-102,-110,-101,-98,-100,-110,225,-99,]),'PUBLIC':([6,7,8,11,12,13,15,16,17,33,34,35,39,86,109,124,210,],[-2,-3,-110,-28,-29,-110,-4,-5,-6,-30,-31,-32,-7,-110,-110,151,-33,]),'INT':([9,14,65,89,],[23,23,23,23,]),'FLOAT':([9,14,65,89,],[24,24,24,24,]),'CHAR':([9,14,65,89,],[25,25,25,25,]),'FILE':([9,],[26,]),'VOID':([14,],[38,]),'COMMA':([41,42,44,55,57,76,81,83,84,112,126,131,132,133,134,135,136,137,138,139,140,141,142,143,148,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[53,-110,59,-14,-16,-110,89,-15,-18,-17,-108,159,-53,-110,-110,-64,-65,-103,-104,-66,-105,-106,-107,-110,184,-110,-72,-77,-54,-57,-60,-63,-68,-71,-67,-73,-74,-75,-76,-55,-56,-61,-62,-66,-66,]),'LEFTKEY':([42,76,],[56,82,]),'LEFTPAREN':([45,50,51,92,105,106,107,108,113,119,121,122,123,125,127,144,159,162,163,164,165,168,169,172,173,176,177,179,184,],[61,65,-109,113,120,121,122,123,127,127,127,127,127,127,127,179,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'COLON':([49,78,151,],[63,86,188,]),'LEFTBRACKET':([49,62,64,69,79,80,186,187,220,],[-110,70,-85,77,-84,87,207,208,223,]),'CTEI':([56,82,113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[67,91,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'RIGHTPAREN':([61,65,72,73,74,81,88,90,111,113,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,147,148,149,150,153,154,155,156,158,160,161,166,167,170,171,174,175,178,179,183,185,190,192,193,194,195,196,197,198,199,200,201,202,203,206,],[69,-110,80,-34,-35,-110,-36,-38,-37,-110,-108,157,-88,-89,-110,-53,-110,-110,-64,-65,-103,-104,-66,-105,-106,-107,-110,181,182,-110,186,187,-58,-59,190,-110,-90,-92,-72,-77,-54,-57,-60,-63,-68,-71,-110,-95,-97,-67,-91,-73,-74,-75,-76,-55,-56,-61,-62,-66,-66,211,-96,]),'INHERIT':([63,],[71,]),'RIGHTKEY':([67,91,],[76,112,]),'PRIVATE':([70,],[78,]),'RETURN':([87,94,95,96,97,98,99,100,101,102,103,110,116,117,118,180,191,204,205,215,216,217,219,221,225,],[-110,-41,-42,-110,-46,-47,-48,-49,-50,-51,-52,125,-43,-44,-45,-86,-87,-93,-94,-102,-110,-101,-98,-100,-99,]),'DOT':([92,],[114,]),'COMP_EQUAL':([92,104,126,132,133,134,135,136,137,138,139,140,141,142,143,153,155,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[-108,119,-108,164,-110,-110,-64,-65,-103,-104,-66,-105,-106,-107,-110,164,-66,164,-72,-77,-54,-57,-60,-63,-68,-71,-67,-73,-74,-75,-76,164,164,-61,-62,-66,-66,]),'CTEF':([113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'CHAR_DEC':([113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'COMP_LESS':([126,132,133,134,135,136,137,138,139,140,141,142,143,153,155,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[-108,162,-110,-110,-64,-65,-103,-104,-66,-105,-106,-107,-110,162,-66,162,-72,-77,-54,-57,-60,-63,-68,-71,-67,-73,-74,-75,-76,162,162,-61,-62,-66,-66,]),'COMP_GREATER':([126,132,133,134,135,136,137,138,139,140,141,142,143,153,155,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[-108,163,-110,-110,-64,-65,-103,-104,-66,-105,-106,-107,-110,163,-66,163,-72,-77,-54,-57,-60,-63,-68,-71,-67,-73,-74,-75,-76,163,163,-61,-62,-66,-66,]),'COMP_NOTEQUAL':([126,132,133,134,135,136,137,138,139,140,141,142,143,153,155,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[-108,165,-110,-110,-64,-65,-103,-104,-66,-105,-106,-107,-110,165,-66,165,-72,-77,-54,-57,-60,-63,-68,-71,-67,-73,-74,-75,-76,165,165,-61,-62,-66,-66,]),'COMP_AND':([126,132,133,134,135,136,137,138,139,140,141,142,143,153,155,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[-108,-110,-110,-110,-64,-65,-103,-104,-66,-105,-106,-107,176,-110,-66,-110,-72,-77,-54,-57,-60,-63,-68,-71,-67,176,176,176,176,-55,-56,-61,-62,-66,-66,]),'COMP_OR':([126,132,133,134,135,136,137,138,139,140,141,142,143,153,155,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[-108,-110,-110,-110,-64,-65,-103,-104,-66,-105,-106,-107,177,-110,-66,-110,-72,-77,-54,-57,-60,-63,-68,-71,-67,177,177,177,177,-55,-56,-61,-62,-66,-66,]),'TIMES':([126,132,133,134,135,136,137,138,139,140,141,142,143,153,155,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[-108,-110,-110,172,-64,-65,-103,-104,-66,-105,-106,-107,-110,-110,-66,-110,-72,-77,-54,-57,-60,-63,-68,-71,-67,-73,-74,-75,-76,-55,-56,-61,-62,-66,-66,]),'DIVIDE':([126,132,133,134,135,136,137,138,139,140,141,142,143,153,155,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[-108,-110,-110,173,-64,-65,-103,-104,-66,-105,-106,-107,-110,-110,-66,-110,-72,-77,-54,-57,-60,-63,-68,-71,-67,-73,-74,-75,-76,-55,-56,-61,-62,-66,-66,]),'PLUS':([126,132,133,134,135,136,137,138,139,140,141,142,143,153,155,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[-108,-110,168,-110,-64,-65,-103,-104,-66,-105,-106,-107,-110,-110,-66,-110,-72,-77,-54,-57,-60,-63,-68,-71,-67,-73,-74,-75,-76,-55,-56,168,168,-66,-66,]),'MINUS':([126,132,133,134,135,136,137,138,139,140,141,142,143,153,155,156,161,166,167,170,171,174,175,178,190,193,194,195,196,197,198,199,200,201,202,],[-108,-110,169,-110,-64,-65,-103,-104,-66,-105,-106,-107,-110,-110,-66,-110,-72,-77,-54,-57,-60,-63,-68,-71,-67,-73,-74,-75,-76,-55,-56,169,169,-66,-66,]),'ELSE':([216,],[220,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'dec_vars_mult':([4,77,86,188,],[5,85,109,209,]),'dec_vars_idk':([4,8,13,77,86,188,],[6,16,34,6,6,6,]),'empty':([4,5,8,10,13,31,41,42,44,49,65,76,77,81,85,86,87,96,109,113,125,131,132,133,134,143,148,153,156,179,188,193,194,195,196,197,198,199,200,207,208,209,216,223,],[7,12,17,30,35,48,54,57,60,64,74,84,7,90,95,7,95,118,12,130,154,160,166,170,174,178,185,166,166,154,7,178,178,178,178,166,166,170,170,95,95,12,221,95,]),'dec_vars':([4,8,13,77,86,188,],[8,8,8,8,8,8,]),'dec_fun':([5,109,209,],[10,124,214,]),'dec_fun_idk':([5,109,209,],[11,11,11,]),'fun':([5,109,209,],[13,13,13,]),'dec_vars_more':([8,],[15,]),'vars':([9,],[18,]),'vars_simple':([9,],[19,]),'vars_complex':([9,],[20,]),'type_simple':([9,14,65,89,],[21,37,75,75,]),'type_complex':([9,],[22,]),'dec_class':([10,],[28,]),'dec_class_idk':([10,31,],[29,47,]),'class_body':([10,31,],[31,31,]),'dec_fun_more':([13,],[33,]),'fun_type':([14,],[36,]),'vars_simple_dec':([21,53,],[40,66,]),'vars_simple_id':([21,53,],[41,41,]),'vars_complex_dec':([22,59,],[43,68,]),'dec_class_more':([31,],[46,]),'fun_id':([36,],[50,]),'vars_simple_more':([41,],[52,]),'vars_simple_arr':([42,],[55,]),'vars_complex_more':([44,],[58,]),'dec_inherit':([49,],[62,]),'param_pos':([65,],[72,]),'param':([65,89,],[73,111,]),'vars_simple_arr2':([76,],[83,]),'param_more':([81,],[88,]),'dec_block':([85,87,207,208,223,],[93,110,212,213,224,]),'block':([85,87,96,207,208,223,],[94,94,117,94,94,94,]),'statement':([85,87,96,207,208,223,],[96,96,96,96,96,96,]),'dec_assign':([85,87,96,207,208,223,],[97,97,97,97,97,97,]),'dec_call':([85,87,96,207,208,223,],[98,98,98,98,98,98,]),'dec_read':([85,87,96,207,208,223,],[99,99,99,99,99,99,]),'dec_write':([85,87,96,207,208,223,],[100,100,100,100,100,100,]),'dec_condition':([85,87,96,207,208,223,],[101,101,101,101,101,101,]),'dec_cycle':([85,87,96,207,208,223,],[102,102,102,102,102,102,]),'dec_method':([85,87,96,207,208,223,],[103,103,103,103,103,103,]),'var_id':([85,87,96,113,119,120,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,207,208,223,],[104,104,104,137,137,146,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,104,104,104,]),'block_more':([96,],[116,]),'call_pos':([113,],[128,]),'call':([113,159,],[129,192,]),'dec_exp':([113,119,121,122,123,159,184,],[131,145,148,149,150,131,148,]),'dec_exp_s':([113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[132,132,132,132,132,153,156,132,156,156,156,156,197,198,156,156,156,156,153,132,]),'dec_term':([113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,199,200,133,133,133,133,]),'dec_fact':([113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'var_cte':([113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'hyper_call':([113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'var_const':([113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'h_exp':([113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[139,139,139,139,139,139,155,139,139,139,139,139,139,139,139,139,201,202,139,139,]),'s_exp':([113,119,121,122,123,125,127,159,162,163,164,165,168,169,172,173,176,177,179,184,],[143,143,143,143,143,143,143,143,193,194,195,196,143,143,143,143,143,143,143,143,]),'write':([121,184,],[147,206,]),'dec_exp_method':([125,179,],[152,203,]),'call_more':([131,],[158,]),'comp_op':([132,153,156,197,198,],[161,161,161,161,161,]),'pm_op':([133,199,200,],[167,167,167,]),'md_op':([134,],[171,]),'ao_op':([143,193,194,195,196,],[175,175,175,175,175,]),'write_more':([148,],[183,]),'dec_else':([216,],[219,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET','program',13,'p_program','parser.py',11),
  ('dec_vars_mult -> dec_vars_idk','dec_vars_mult',1,'p_dec_vars_mult','parser.py',36),
  ('dec_vars_mult -> empty','dec_vars_mult',1,'p_dec_vars_mult','parser.py',37),
  ('dec_vars_idk -> dec_vars dec_vars_more','dec_vars_idk',2,'p_dec_vars_idk','parser.py',47),
  ('dec_vars_more -> dec_vars_idk','dec_vars_more',1,'p_dec_vars_more','parser.py',56),
  ('dec_vars_more -> empty','dec_vars_more',1,'p_dec_vars_more','parser.py',57),
  ('dec_vars -> VAR vars SEMICOLON','dec_vars',3,'p_dec_vars','parser.py',62),
  ('vars -> vars_simple','vars',1,'p_vars','parser.py',69),
  ('vars -> vars_complex','vars',1,'p_vars','parser.py',70),
  ('vars_simple -> type_simple vars_simple_dec','vars_simple',2,'p_vars_simple','parser.py',75),
  ('vars_simple_dec -> vars_simple_id vars_simple_more','vars_simple_dec',2,'p_vars_simple_dec','parser.py',80),
  ('vars_simple_more -> COMMA vars_simple_dec','vars_simple_more',2,'p_vars_simple_more','parser.py',94),
  ('vars_simple_more -> empty','vars_simple_more',1,'p_vars_simple_more','parser.py',95),
  ('vars_simple_id -> ID vars_simple_arr','vars_simple_id',2,'p_vars_simple_id','parser.py',101),
  ('vars_simple_arr -> LEFTKEY CTEI RIGHTKEY vars_simple_arr2','vars_simple_arr',4,'p_vars_simple_arr','parser.py',107),
  ('vars_simple_arr -> empty','vars_simple_arr',1,'p_vars_simple_arr','parser.py',108),
  ('vars_simple_arr2 -> LEFTKEY CTEI RIGHTKEY','vars_simple_arr2',3,'p_vars_simple_arr2','parser.py',119),
  ('vars_simple_arr2 -> empty','vars_simple_arr2',1,'p_vars_simple_arr2','parser.py',120),
  ('vars_complex -> type_complex vars_complex_dec','vars_complex',2,'p_vars_complex','parser.py',127),
  ('vars_complex_dec -> ID vars_complex_more','vars_complex_dec',2,'p_vars_complex_dec','parser.py',131),
  ('vars_complex_more -> COMMA vars_complex_dec','vars_complex_more',2,'p_vars_complex_more','parser.py',142),
  ('vars_complex_more -> empty','vars_complex_more',1,'p_vars_complex_more','parser.py',143),
  ('type_simple -> INT','type_simple',1,'p_type_simple','parser.py',150),
  ('type_simple -> FLOAT','type_simple',1,'p_type_simple','parser.py',151),
  ('type_simple -> CHAR','type_simple',1,'p_type_simple','parser.py',152),
  ('type_complex -> FILE','type_complex',1,'p_type_complex','parser.py',157),
  ('type_complex -> ID','type_complex',1,'p_type_complex','parser.py',158),
  ('dec_fun -> dec_fun_idk','dec_fun',1,'p_dec_fun','parser.py',170),
  ('dec_fun -> empty','dec_fun',1,'p_dec_fun','parser.py',171),
  ('dec_fun_idk -> fun dec_fun_more','dec_fun_idk',2,'p_dec_fun_idk','parser.py',176),
  ('dec_fun_more -> dec_vars_idk','dec_fun_more',1,'p_dec_fun_more','parser.py',184),
  ('dec_fun_more -> empty','dec_fun_more',1,'p_dec_fun_more','parser.py',185),
  ('fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_block RETURN dec_exp_method SEMICOLON RIGHTBRACKET','fun',12,'p_fun','parser.py',190),
  ('param_pos -> param','param_pos',1,'p_param_pos','parser.py',194),
  ('param_pos -> empty','param_pos',1,'p_param_pos','parser.py',195),
  ('param -> type_simple ID param_more','param',3,'p_param','parser.py',200),
  ('param_more -> COMMA param','param_more',2,'p_param_more','parser.py',204),
  ('param_more -> empty','param_more',1,'p_param_more','parser.py',205),
  ('fun_type -> type_simple','fun_type',1,'p_fun_type','parser.py',210),
  ('fun_type -> VOID','fun_type',1,'p_fun_type','parser.py',211),
  ('dec_block -> block','dec_block',1,'p_dec_block','parser.py',222),
  ('dec_block -> empty','dec_block',1,'p_dec_block','parser.py',223),
  ('block -> statement block_more','block',2,'p_block','parser.py',229),
  ('block_more -> block','block_more',1,'p_block_more','parser.py',238),
  ('block_more -> empty','block_more',1,'p_block_more','parser.py',239),
  ('statement -> dec_assign','statement',1,'p_statement','parser.py',244),
  ('statement -> dec_call','statement',1,'p_statement','parser.py',245),
  ('statement -> dec_read','statement',1,'p_statement','parser.py',246),
  ('statement -> dec_write','statement',1,'p_statement','parser.py',247),
  ('statement -> dec_condition','statement',1,'p_statement','parser.py',248),
  ('statement -> dec_cycle','statement',1,'p_statement','parser.py',249),
  ('statement -> dec_method','statement',1,'p_statement','parser.py',250),
  ('dec_exp -> dec_exp_s','dec_exp',1,'p_dec_exp','parser.py',263),
  ('dec_exp_s -> dec_term pm_op','dec_exp_s',2,'p_dec_exp_s','parser.py',268),
  ('pm_op -> PLUS dec_exp_s','pm_op',2,'p_pm_op','parser.py',272),
  ('pm_op -> MINUS dec_exp_s','pm_op',2,'p_pm_op','parser.py',273),
  ('pm_op -> empty','pm_op',1,'p_pm_op','parser.py',274),
  ('dec_exp_method -> dec_exp_s','dec_exp_method',1,'p_dec_exp_method','parser.py',283),
  ('dec_exp_method -> empty','dec_exp_method',1,'p_dec_exp_method','parser.py',284),
  ('dec_term -> dec_fact md_op','dec_term',2,'p_dec_term','parser.py',292),
  ('md_op -> TIMES dec_term','md_op',2,'p_md_op','parser.py',296),
  ('md_op -> DIVIDE dec_term','md_op',2,'p_md_op','parser.py',297),
  ('md_op -> empty','md_op',1,'p_md_op','parser.py',298),
  ('dec_fact -> var_cte','dec_fact',1,'p_dec_fact','parser.py',307),
  ('dec_fact -> hyper_call','dec_fact',1,'p_dec_fact','parser.py',308),
  ('hyper_call -> h_exp','hyper_call',1,'p_hyper_call','parser.py',315),
  ('hyper_call -> LEFTPAREN h_exp RIGHTPAREN','hyper_call',3,'p_hyper_call','parser.py',316),
  ('h_exp -> s_exp ao_op','h_exp',2,'p_h_exp','parser.py',324),
  ('ao_op -> COMP_AND h_exp','ao_op',2,'p_ao_op','parser.py',329),
  ('ao_op -> COMP_OR h_exp','ao_op',2,'p_ao_op','parser.py',330),
  ('ao_op -> empty','ao_op',1,'p_ao_op','parser.py',331),
  ('s_exp -> dec_exp_s comp_op','s_exp',2,'p_s_exp','parser.py',339),
  ('comp_op -> COMP_LESS s_exp','comp_op',2,'p_comp_op','parser.py',343),
  ('comp_op -> COMP_GREATER s_exp','comp_op',2,'p_comp_op','parser.py',344),
  ('comp_op -> COMP_EQUAL s_exp','comp_op',2,'p_comp_op','parser.py',345),
  ('comp_op -> COMP_NOTEQUAL s_exp','comp_op',2,'p_comp_op','parser.py',346),
  ('comp_op -> empty','comp_op',1,'p_comp_op','parser.py',347),
  ('dec_class -> dec_class_idk','dec_class',1,'p_dec_class','parser.py',363),
  ('dec_class -> empty','dec_class',1,'p_dec_class','parser.py',364),
  ('dec_class_idk -> class_body dec_class_more','dec_class_idk',2,'p_dec_class_idk','parser.py',367),
  ('dec_class_more -> dec_class_idk','dec_class_more',1,'p_dec_class_more','parser.py',375),
  ('dec_class_more -> empty','dec_class_more',1,'p_dec_class_more','parser.py',376),
  ('class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON','class_body',14,'p_class_body','parser.py',381),
  ('dec_inherit -> COLON INHERIT ID','dec_inherit',3,'p_dec_inherit','parser.py',384),
  ('dec_inherit -> empty','dec_inherit',1,'p_dec_inherit','parser.py',385),
  ('dec_assign -> var_id COMP_EQUAL dec_exp SEMICOLON','dec_assign',4,'p_dec_assign','parser.py',399),
  ('dec_call -> ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON','dec_call',5,'p_dec_call','parser.py',406),
  ('call_pos -> call','call_pos',1,'p_call_pos','parser.py',409),
  ('call_pos -> empty','call_pos',1,'p_call_pos','parser.py',410),
  ('call -> dec_exp call_more','call',2,'p_call','parser.py',413),
  ('call_more -> COMMA call','call_more',2,'p_call_more','parser.py',416),
  ('call_more -> empty','call_more',1,'p_call_more','parser.py',417),
  ('dec_read -> INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON','dec_read',5,'p_dec_read','parser.py',430),
  ('dec_write -> OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON','dec_write',5,'p_dec_write','parser.py',433),
  ('write -> dec_exp write_more','write',2,'p_write','parser.py',437),
  ('write_more -> COMMA write','write_more',2,'p_write_more','parser.py',445),
  ('write_more -> empty','write_more',1,'p_write_more','parser.py',446),
  ('dec_condition -> IF LEFTPAREN dec_exp RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else','dec_condition',8,'p_dec_condition','parser.py',452),
  ('dec_else -> ELSE LEFTBRACKET dec_block RIGHTBRACKET','dec_else',4,'p_dec_else','parser.py',458),
  ('dec_else -> empty','dec_else',1,'p_dec_else','parser.py',459),
  ('dec_cycle -> WHILE LEFTPAREN dec_exp RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET','dec_cycle',7,'p_dec_cycle','parser.py',465),
  ('dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON','dec_method',7,'p_dec_method','parser.py',469),
  ('var_cte -> var_id','var_cte',1,'p_var_cte','parser.py',474),
  ('var_cte -> var_const','var_cte',1,'p_var_cte','parser.py',475),
  ('var_const -> CTEI','var_const',1,'p_var_const','parser.py',479),
  ('var_const -> CTEF','var_const',1,'p_var_const','parser.py',480),
  ('var_const -> CHAR_DEC','var_const',1,'p_var_const','parser.py',481),
  ('var_id -> ID','var_id',1,'p_var_id','parser.py',485),
  ('fun_id -> ID','fun_id',1,'p_fun_id','parser.py',491),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',504),
]

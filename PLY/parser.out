Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET
Rule 2     dec_vars_mult -> dec_vars_idk
Rule 3     dec_vars_mult -> empty
Rule 4     dec_vars_idk -> dec_vars dec_vars_more
Rule 5     dec_vars_more -> dec_vars_idk
Rule 6     dec_vars_more -> empty
Rule 7     dec_vars -> VAR vars SEMICOLON
Rule 8     vars -> vars_simple
Rule 9     vars -> vars_complex
Rule 10    vars_simple -> type_simple vars_simple_dec
Rule 11    vars_simple_dec -> vars_simple_id vars_simple_more
Rule 12    vars_simple_more -> COMMA vars_simple_dec
Rule 13    vars_simple_more -> empty
Rule 14    vars_simple_id -> ID vars_simple_arr
Rule 15    vars_simple_arr -> LEFTKEY CTEI RIGHTKEY vars_simple_arr2
Rule 16    vars_simple_arr -> empty
Rule 17    vars_simple_arr2 -> LEFTKEY CTEI RIGHTKEY
Rule 18    vars_simple_arr2 -> empty
Rule 19    vars_complex -> type_complex vars_complex_dec
Rule 20    vars_complex_dec -> ID vars_complex_more
Rule 21    vars_complex_more -> COMMA vars_complex_dec
Rule 22    vars_complex_more -> empty
Rule 23    type_simple -> INT
Rule 24    type_simple -> FLOAT
Rule 25    type_simple -> CHAR
Rule 26    type_simple -> BOOL
Rule 27    type_complex -> FILE
Rule 28    type_complex -> ID
Rule 29    dec_fun -> dec_fun_idk
Rule 30    dec_fun -> empty
Rule 31    dec_fun_idk -> fun dec_fun_more
Rule 32    dec_fun_more -> dec_fun_idk
Rule 33    dec_fun_more -> empty
Rule 34    fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET
Rule 35    param_pos -> param
Rule 36    param_pos -> empty
Rule 37    param -> type_simple ID param_more
Rule 38    param_more -> COMMA param
Rule 39    param_more -> empty
Rule 40    fun_type -> type_simple
Rule 41    fun_type -> VOID
Rule 42    fun_return -> RETURN dec_exp_method SEMICOLON
Rule 43    dec_block -> block
Rule 44    dec_block -> empty
Rule 45    block -> statement block_more
Rule 46    block_more -> block
Rule 47    block_more -> empty
Rule 48    statement -> dec_assign
Rule 49    statement -> dec_call
Rule 50    statement -> dec_read
Rule 51    statement -> dec_write
Rule 52    statement -> dec_condition
Rule 53    statement -> dec_cycle
Rule 54    statement -> dec_method
Rule 55    statement -> fun_return
Rule 56    dec_exp -> dec_exp_s
Rule 57    dec_exp_s -> dec_term pm_op
Rule 58    pm_op -> PLUS dec_exp_s
Rule 59    pm_op -> MINUS dec_exp_s
Rule 60    pm_op -> empty
Rule 61    dec_exp_method -> dec_exp_s
Rule 62    dec_exp_method -> empty
Rule 63    dec_term -> dec_fact md_op
Rule 64    md_op -> TIMES dec_term
Rule 65    md_op -> DIVIDE dec_term
Rule 66    md_op -> empty
Rule 67    dec_fact -> var_cte
Rule 68    dec_fact -> LEFTPAREN hyper_call RIGHTPAREN
Rule 69    hyper_call -> h_exp
Rule 70    h_exp -> s_exp ao_op
Rule 71    ao_op -> COMP_AND h_exp
Rule 72    ao_op -> COMP_OR h_exp
Rule 73    ao_op -> empty
Rule 74    s_exp -> dec_exp_s comp_op
Rule 75    comp_op -> COMP_LESS dec_exp_s
Rule 76    comp_op -> COMP_GREATER dec_exp_s
Rule 77    comp_op -> COMP_EQUAL dec_exp_s
Rule 78    comp_op -> COMP_NOTEQUAL dec_exp_s
Rule 79    comp_op -> empty
Rule 80    dec_class -> dec_class_idk
Rule 81    dec_class -> empty
Rule 82    dec_class_idk -> class_body dec_class_more
Rule 83    dec_class_more -> dec_class_idk
Rule 84    dec_class_more -> empty
Rule 85    class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON
Rule 86    dec_inherit -> COLON INHERIT ID
Rule 87    dec_inherit -> empty
Rule 88    dec_assign -> var_id ASSIGN hyper_call SEMICOLON
Rule 89    dec_call -> ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON
Rule 90    dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN
Rule 91    call_pos -> call
Rule 92    call_pos -> empty
Rule 93    call -> hyper_call call_more
Rule 94    call_more -> COMMA call
Rule 95    call_more -> empty
Rule 96    dec_read -> INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON
Rule 97    dec_write -> OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON
Rule 98    write -> print_sign write_more
Rule 99    write_more -> COMMA write
Rule 100   write_more -> empty
Rule 101   dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else
Rule 102   dec_else -> ELSE LEFTBRACKET dec_block RIGHTBRACKET
Rule 103   dec_else -> empty
Rule 104   dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET
Rule 105   dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON
Rule 106   var_cte -> var_id
Rule 107   var_cte -> dec_call_exp
Rule 108   var_cte -> var_const
Rule 109   var_const -> cte_num
Rule 110   var_const -> CHAR_DEC
Rule 111   var_const -> TRUE
Rule 112   var_const -> FALSE
Rule 113   cte_num -> CTEF
Rule 114   cte_num -> CTEI
Rule 115   cte_num -> MINUS CTEI
Rule 116   cte_num -> MINUS CTEF
Rule 117   print_sign -> hyper_call
Rule 118   print_sign -> SIGN
Rule 119   var_id -> ID
Rule 120   var_id -> ID LEFTKEY dec_exp RIGHTKEY
Rule 121   var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
Rule 122   fun_id -> ID
Rule 123   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 88
BOOL                 : 26
CHAR                 : 25
CHAR_DEC             : 110
CLASS                : 85
COLON                : 85 85 86
COMMA                : 12 21 38 94 99
COMP_AND             : 71
COMP_EQUAL           : 77
COMP_GREATER         : 76
COMP_LESS            : 75
COMP_NOTEQUAL        : 78
COMP_OR              : 72
CTEF                 : 113 116
CTEI                 : 15 17 114 115
DIVIDE               : 65
DOT                  : 105
ELSE                 : 102
FALSE                : 112
FILE                 : 27
FLOAT                : 24
FUN                  : 34
ID                   : 1 14 20 28 37 85 86 89 90 105 105 119 120 121 122
IF                   : 101
INCO                 : 96
INHERIT              : 86
INT                  : 23
LEFTBRACKET          : 1 34 85 101 102 104
LEFTKEY              : 15 17 120 121 121
LEFTPAREN            : 1 34 68 89 90 96 97 101 104 105
MAIN                 : 1
MINUS                : 59 115 116
OUTCO                : 97
PLUS                 : 58
PRIVATE              : 85
PROGRAM              : 1
PUBLIC               : 85
RETURN               : 42
RIGHTBRACKET         : 1 34 85 101 102 104
RIGHTKEY             : 15 17 120 121 121
RIGHTPAREN           : 1 34 68 89 90 96 97 101 104 105
SEMICOLON            : 1 7 42 85 88 89 96 97 105
SIGN                 : 118
TIMES                : 64
TRUE                 : 111
VAR                  : 7
VOID                 : 41
WHILE                : 104
error                : 

Nonterminals, with rules where they appear

ao_op                : 70
block                : 43 46
block_more           : 45
call                 : 91 94
call_more            : 93
call_pos             : 89 90
class_body           : 82
comp_op              : 74
cte_num              : 109
dec_assign           : 48
dec_block            : 1 34 101 102 104
dec_call             : 49
dec_call_exp         : 107
dec_class            : 1
dec_class_idk        : 80 83
dec_class_more       : 82
dec_condition        : 52
dec_cycle            : 53
dec_else             : 101
dec_exp              : 120 121 121
dec_exp_method       : 42 105
dec_exp_s            : 56 58 59 61 74 75 76 77 78
dec_fact             : 63
dec_fun              : 1 85 85
dec_fun_idk          : 29 32
dec_fun_more         : 31
dec_inherit          : 85
dec_method           : 54
dec_read             : 50
dec_term             : 57 64 65
dec_vars             : 4
dec_vars_idk         : 2 5
dec_vars_more        : 4
dec_vars_mult        : 1 1 34 85 85
dec_write            : 51
empty                : 3 6 13 16 18 22 30 33 36 39 44 47 60 62 66 73 79 81 84 87 92 95 100 103
fun                  : 31
fun_id               : 34
fun_return           : 55
fun_type             : 34
h_exp                : 69 71 72
hyper_call           : 68 88 93 101 104 117
md_op                : 63
param                : 35 38
param_more           : 37
param_pos            : 34
pm_op                : 57
print_sign           : 98
program              : 0
s_exp                : 70
statement            : 45
type_complex         : 19
type_simple          : 10 37 40
var_const            : 108
var_cte              : 67
var_id               : 88 96 106
vars                 : 7
vars_complex         : 9
vars_complex_dec     : 19 21
vars_complex_more    : 20
vars_simple          : 8
vars_simple_arr      : 14
vars_simple_arr2     : 15
vars_simple_dec      : 10 12
vars_simple_id       : 11
vars_simple_more     : 11
write                : 97 99
write_more           : 98

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET
    (2) dec_vars_mult -> . dec_vars_idk
    (3) dec_vars_mult -> . empty
    (4) dec_vars_idk -> . dec_vars dec_vars_more
    (123) empty -> .
    (7) dec_vars -> . VAR vars SEMICOLON

    FUN             reduce using rule 123 (empty -> .)
    CLASS           reduce using rule 123 (empty -> .)
    MAIN            reduce using rule 123 (empty -> .)
    VAR             shift and go to state 9

    dec_vars_mult                  shift and go to state 5
    dec_vars_idk                   shift and go to state 6
    empty                          shift and go to state 7
    dec_vars                       shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON dec_vars_mult . dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET
    (29) dec_fun -> . dec_fun_idk
    (30) dec_fun -> . empty
    (31) dec_fun_idk -> . fun dec_fun_more
    (123) empty -> .
    (34) fun -> . FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    CLASS           reduce using rule 123 (empty -> .)
    MAIN            reduce using rule 123 (empty -> .)
    FUN             shift and go to state 14

    dec_fun                        shift and go to state 10
    dec_fun_idk                    shift and go to state 11
    empty                          shift and go to state 12
    fun                            shift and go to state 13

state 6

    (2) dec_vars_mult -> dec_vars_idk .

    FUN             reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)
    CLASS           reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)
    MAIN            reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)
    ID              reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)
    INCO            reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)
    OUTCO           reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)
    IF              reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)
    WHILE           reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)
    RETURN          reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)
    RIGHTBRACKET    reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)
    PUBLIC          reduce using rule 2 (dec_vars_mult -> dec_vars_idk .)


state 7

    (3) dec_vars_mult -> empty .

    FUN             reduce using rule 3 (dec_vars_mult -> empty .)
    CLASS           reduce using rule 3 (dec_vars_mult -> empty .)
    MAIN            reduce using rule 3 (dec_vars_mult -> empty .)
    ID              reduce using rule 3 (dec_vars_mult -> empty .)
    INCO            reduce using rule 3 (dec_vars_mult -> empty .)
    OUTCO           reduce using rule 3 (dec_vars_mult -> empty .)
    IF              reduce using rule 3 (dec_vars_mult -> empty .)
    WHILE           reduce using rule 3 (dec_vars_mult -> empty .)
    RETURN          reduce using rule 3 (dec_vars_mult -> empty .)
    RIGHTBRACKET    reduce using rule 3 (dec_vars_mult -> empty .)
    PUBLIC          reduce using rule 3 (dec_vars_mult -> empty .)


state 8

    (4) dec_vars_idk -> dec_vars . dec_vars_more
    (5) dec_vars_more -> . dec_vars_idk
    (6) dec_vars_more -> . empty
    (4) dec_vars_idk -> . dec_vars dec_vars_more
    (123) empty -> .
    (7) dec_vars -> . VAR vars SEMICOLON

    FUN             reduce using rule 123 (empty -> .)
    CLASS           reduce using rule 123 (empty -> .)
    MAIN            reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    INCO            reduce using rule 123 (empty -> .)
    OUTCO           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    RETURN          reduce using rule 123 (empty -> .)
    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    PUBLIC          reduce using rule 123 (empty -> .)
    VAR             shift and go to state 9

    dec_vars                       shift and go to state 8
    dec_vars_more                  shift and go to state 15
    dec_vars_idk                   shift and go to state 16
    empty                          shift and go to state 17

state 9

    (7) dec_vars -> VAR . vars SEMICOLON
    (8) vars -> . vars_simple
    (9) vars -> . vars_complex
    (10) vars_simple -> . type_simple vars_simple_dec
    (19) vars_complex -> . type_complex vars_complex_dec
    (23) type_simple -> . INT
    (24) type_simple -> . FLOAT
    (25) type_simple -> . CHAR
    (26) type_simple -> . BOOL
    (27) type_complex -> . FILE
    (28) type_complex -> . ID

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26
    FILE            shift and go to state 27
    ID              shift and go to state 28

    vars                           shift and go to state 18
    vars_simple                    shift and go to state 19
    vars_complex                   shift and go to state 20
    type_simple                    shift and go to state 21
    type_complex                   shift and go to state 22

state 10

    (1) program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun . dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET
    (80) dec_class -> . dec_class_idk
    (81) dec_class -> . empty
    (82) dec_class_idk -> . class_body dec_class_more
    (123) empty -> .
    (85) class_body -> . CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON

    MAIN            reduce using rule 123 (empty -> .)
    CLASS           shift and go to state 33

    dec_class                      shift and go to state 29
    dec_class_idk                  shift and go to state 30
    empty                          shift and go to state 31
    class_body                     shift and go to state 32

state 11

    (29) dec_fun -> dec_fun_idk .

    CLASS           reduce using rule 29 (dec_fun -> dec_fun_idk .)
    MAIN            reduce using rule 29 (dec_fun -> dec_fun_idk .)
    PUBLIC          reduce using rule 29 (dec_fun -> dec_fun_idk .)
    RIGHTBRACKET    reduce using rule 29 (dec_fun -> dec_fun_idk .)


state 12

    (30) dec_fun -> empty .

    CLASS           reduce using rule 30 (dec_fun -> empty .)
    MAIN            reduce using rule 30 (dec_fun -> empty .)
    PUBLIC          reduce using rule 30 (dec_fun -> empty .)
    RIGHTBRACKET    reduce using rule 30 (dec_fun -> empty .)


state 13

    (31) dec_fun_idk -> fun . dec_fun_more
    (32) dec_fun_more -> . dec_fun_idk
    (33) dec_fun_more -> . empty
    (31) dec_fun_idk -> . fun dec_fun_more
    (123) empty -> .
    (34) fun -> . FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    CLASS           reduce using rule 123 (empty -> .)
    MAIN            reduce using rule 123 (empty -> .)
    PUBLIC          reduce using rule 123 (empty -> .)
    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    FUN             shift and go to state 14

    fun                            shift and go to state 13
    dec_fun_more                   shift and go to state 34
    dec_fun_idk                    shift and go to state 35
    empty                          shift and go to state 36

state 14

    (34) fun -> FUN . fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET
    (40) fun_type -> . type_simple
    (41) fun_type -> . VOID
    (23) type_simple -> . INT
    (24) type_simple -> . FLOAT
    (25) type_simple -> . CHAR
    (26) type_simple -> . BOOL

    VOID            shift and go to state 39
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    fun_type                       shift and go to state 37
    type_simple                    shift and go to state 38

state 15

    (4) dec_vars_idk -> dec_vars dec_vars_more .

    FUN             reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)
    CLASS           reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)
    MAIN            reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)
    ID              reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)
    INCO            reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)
    OUTCO           reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)
    IF              reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)
    WHILE           reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)
    RETURN          reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)
    RIGHTBRACKET    reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)
    PUBLIC          reduce using rule 4 (dec_vars_idk -> dec_vars dec_vars_more .)


state 16

    (5) dec_vars_more -> dec_vars_idk .

    FUN             reduce using rule 5 (dec_vars_more -> dec_vars_idk .)
    CLASS           reduce using rule 5 (dec_vars_more -> dec_vars_idk .)
    MAIN            reduce using rule 5 (dec_vars_more -> dec_vars_idk .)
    ID              reduce using rule 5 (dec_vars_more -> dec_vars_idk .)
    INCO            reduce using rule 5 (dec_vars_more -> dec_vars_idk .)
    OUTCO           reduce using rule 5 (dec_vars_more -> dec_vars_idk .)
    IF              reduce using rule 5 (dec_vars_more -> dec_vars_idk .)
    WHILE           reduce using rule 5 (dec_vars_more -> dec_vars_idk .)
    RETURN          reduce using rule 5 (dec_vars_more -> dec_vars_idk .)
    RIGHTBRACKET    reduce using rule 5 (dec_vars_more -> dec_vars_idk .)
    PUBLIC          reduce using rule 5 (dec_vars_more -> dec_vars_idk .)


state 17

    (6) dec_vars_more -> empty .

    FUN             reduce using rule 6 (dec_vars_more -> empty .)
    CLASS           reduce using rule 6 (dec_vars_more -> empty .)
    MAIN            reduce using rule 6 (dec_vars_more -> empty .)
    ID              reduce using rule 6 (dec_vars_more -> empty .)
    INCO            reduce using rule 6 (dec_vars_more -> empty .)
    OUTCO           reduce using rule 6 (dec_vars_more -> empty .)
    IF              reduce using rule 6 (dec_vars_more -> empty .)
    WHILE           reduce using rule 6 (dec_vars_more -> empty .)
    RETURN          reduce using rule 6 (dec_vars_more -> empty .)
    RIGHTBRACKET    reduce using rule 6 (dec_vars_more -> empty .)
    PUBLIC          reduce using rule 6 (dec_vars_more -> empty .)


state 18

    (7) dec_vars -> VAR vars . SEMICOLON

    SEMICOLON       shift and go to state 40


state 19

    (8) vars -> vars_simple .

    SEMICOLON       reduce using rule 8 (vars -> vars_simple .)


state 20

    (9) vars -> vars_complex .

    SEMICOLON       reduce using rule 9 (vars -> vars_complex .)


state 21

    (10) vars_simple -> type_simple . vars_simple_dec
    (11) vars_simple_dec -> . vars_simple_id vars_simple_more
    (14) vars_simple_id -> . ID vars_simple_arr

    ID              shift and go to state 43

    vars_simple_dec                shift and go to state 41
    vars_simple_id                 shift and go to state 42

state 22

    (19) vars_complex -> type_complex . vars_complex_dec
    (20) vars_complex_dec -> . ID vars_complex_more

    ID              shift and go to state 45

    vars_complex_dec               shift and go to state 44

state 23

    (23) type_simple -> INT .

    ID              reduce using rule 23 (type_simple -> INT .)


state 24

    (24) type_simple -> FLOAT .

    ID              reduce using rule 24 (type_simple -> FLOAT .)


state 25

    (25) type_simple -> CHAR .

    ID              reduce using rule 25 (type_simple -> CHAR .)


state 26

    (26) type_simple -> BOOL .

    ID              reduce using rule 26 (type_simple -> BOOL .)


state 27

    (27) type_complex -> FILE .

    ID              reduce using rule 27 (type_complex -> FILE .)


state 28

    (28) type_complex -> ID .

    ID              reduce using rule 28 (type_complex -> ID .)


state 29

    (1) program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class . MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    MAIN            shift and go to state 46


state 30

    (80) dec_class -> dec_class_idk .

    MAIN            reduce using rule 80 (dec_class -> dec_class_idk .)


state 31

    (81) dec_class -> empty .

    MAIN            reduce using rule 81 (dec_class -> empty .)


state 32

    (82) dec_class_idk -> class_body . dec_class_more
    (83) dec_class_more -> . dec_class_idk
    (84) dec_class_more -> . empty
    (82) dec_class_idk -> . class_body dec_class_more
    (123) empty -> .
    (85) class_body -> . CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON

    MAIN            reduce using rule 123 (empty -> .)
    CLASS           shift and go to state 33

    class_body                     shift and go to state 32
    dec_class_more                 shift and go to state 47
    dec_class_idk                  shift and go to state 48
    empty                          shift and go to state 49

state 33

    (85) class_body -> CLASS . ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON

    ID              shift and go to state 50


state 34

    (31) dec_fun_idk -> fun dec_fun_more .

    CLASS           reduce using rule 31 (dec_fun_idk -> fun dec_fun_more .)
    MAIN            reduce using rule 31 (dec_fun_idk -> fun dec_fun_more .)
    PUBLIC          reduce using rule 31 (dec_fun_idk -> fun dec_fun_more .)
    RIGHTBRACKET    reduce using rule 31 (dec_fun_idk -> fun dec_fun_more .)


state 35

    (32) dec_fun_more -> dec_fun_idk .

    CLASS           reduce using rule 32 (dec_fun_more -> dec_fun_idk .)
    MAIN            reduce using rule 32 (dec_fun_more -> dec_fun_idk .)
    PUBLIC          reduce using rule 32 (dec_fun_more -> dec_fun_idk .)
    RIGHTBRACKET    reduce using rule 32 (dec_fun_more -> dec_fun_idk .)


state 36

    (33) dec_fun_more -> empty .

    CLASS           reduce using rule 33 (dec_fun_more -> empty .)
    MAIN            reduce using rule 33 (dec_fun_more -> empty .)
    PUBLIC          reduce using rule 33 (dec_fun_more -> empty .)
    RIGHTBRACKET    reduce using rule 33 (dec_fun_more -> empty .)


state 37

    (34) fun -> FUN fun_type . fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET
    (122) fun_id -> . ID

    ID              shift and go to state 52

    fun_id                         shift and go to state 51

state 38

    (40) fun_type -> type_simple .

    ID              reduce using rule 40 (fun_type -> type_simple .)


state 39

    (41) fun_type -> VOID .

    ID              reduce using rule 41 (fun_type -> VOID .)


state 40

    (7) dec_vars -> VAR vars SEMICOLON .

    VAR             reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    FUN             reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    CLASS           reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    MAIN            reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    ID              reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    INCO            reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    OUTCO           reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    IF              reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    WHILE           reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    RETURN          reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    RIGHTBRACKET    reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)
    PUBLIC          reduce using rule 7 (dec_vars -> VAR vars SEMICOLON .)


state 41

    (10) vars_simple -> type_simple vars_simple_dec .

    SEMICOLON       reduce using rule 10 (vars_simple -> type_simple vars_simple_dec .)


state 42

    (11) vars_simple_dec -> vars_simple_id . vars_simple_more
    (12) vars_simple_more -> . COMMA vars_simple_dec
    (13) vars_simple_more -> . empty
    (123) empty -> .

    COMMA           shift and go to state 54
    SEMICOLON       reduce using rule 123 (empty -> .)

    vars_simple_more               shift and go to state 53
    empty                          shift and go to state 55

state 43

    (14) vars_simple_id -> ID . vars_simple_arr
    (15) vars_simple_arr -> . LEFTKEY CTEI RIGHTKEY vars_simple_arr2
    (16) vars_simple_arr -> . empty
    (123) empty -> .

    LEFTKEY         shift and go to state 57
    COMMA           reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)

    vars_simple_arr                shift and go to state 56
    empty                          shift and go to state 58

state 44

    (19) vars_complex -> type_complex vars_complex_dec .

    SEMICOLON       reduce using rule 19 (vars_complex -> type_complex vars_complex_dec .)


state 45

    (20) vars_complex_dec -> ID . vars_complex_more
    (21) vars_complex_more -> . COMMA vars_complex_dec
    (22) vars_complex_more -> . empty
    (123) empty -> .

    COMMA           shift and go to state 60
    SEMICOLON       reduce using rule 123 (empty -> .)

    vars_complex_more              shift and go to state 59
    empty                          shift and go to state 61

state 46

    (1) program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN . LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    LEFTPAREN       shift and go to state 62


state 47

    (82) dec_class_idk -> class_body dec_class_more .

    MAIN            reduce using rule 82 (dec_class_idk -> class_body dec_class_more .)


state 48

    (83) dec_class_more -> dec_class_idk .

    MAIN            reduce using rule 83 (dec_class_more -> dec_class_idk .)


state 49

    (84) dec_class_more -> empty .

    MAIN            reduce using rule 84 (dec_class_more -> empty .)


state 50

    (85) class_body -> CLASS ID . dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON
    (86) dec_inherit -> . COLON INHERIT ID
    (87) dec_inherit -> . empty
    (123) empty -> .

    COLON           shift and go to state 64
    LEFTBRACKET     reduce using rule 123 (empty -> .)

    dec_inherit                    shift and go to state 63
    empty                          shift and go to state 65

state 51

    (34) fun -> FUN fun_type fun_id . LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    LEFTPAREN       shift and go to state 66


state 52

    (122) fun_id -> ID .

    LEFTPAREN       reduce using rule 122 (fun_id -> ID .)


state 53

    (11) vars_simple_dec -> vars_simple_id vars_simple_more .

    SEMICOLON       reduce using rule 11 (vars_simple_dec -> vars_simple_id vars_simple_more .)


state 54

    (12) vars_simple_more -> COMMA . vars_simple_dec
    (11) vars_simple_dec -> . vars_simple_id vars_simple_more
    (14) vars_simple_id -> . ID vars_simple_arr

    ID              shift and go to state 43

    vars_simple_dec                shift and go to state 67
    vars_simple_id                 shift and go to state 42

state 55

    (13) vars_simple_more -> empty .

    SEMICOLON       reduce using rule 13 (vars_simple_more -> empty .)


state 56

    (14) vars_simple_id -> ID vars_simple_arr .

    COMMA           reduce using rule 14 (vars_simple_id -> ID vars_simple_arr .)
    SEMICOLON       reduce using rule 14 (vars_simple_id -> ID vars_simple_arr .)


state 57

    (15) vars_simple_arr -> LEFTKEY . CTEI RIGHTKEY vars_simple_arr2

    CTEI            shift and go to state 68


state 58

    (16) vars_simple_arr -> empty .

    COMMA           reduce using rule 16 (vars_simple_arr -> empty .)
    SEMICOLON       reduce using rule 16 (vars_simple_arr -> empty .)


state 59

    (20) vars_complex_dec -> ID vars_complex_more .

    SEMICOLON       reduce using rule 20 (vars_complex_dec -> ID vars_complex_more .)


state 60

    (21) vars_complex_more -> COMMA . vars_complex_dec
    (20) vars_complex_dec -> . ID vars_complex_more

    ID              shift and go to state 45

    vars_complex_dec               shift and go to state 69

state 61

    (22) vars_complex_more -> empty .

    SEMICOLON       reduce using rule 22 (vars_complex_more -> empty .)


state 62

    (1) program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN . RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    RIGHTPAREN      shift and go to state 70


state 63

    (85) class_body -> CLASS ID dec_inherit . LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON

    LEFTBRACKET     shift and go to state 71


state 64

    (86) dec_inherit -> COLON . INHERIT ID

    INHERIT         shift and go to state 72


state 65

    (87) dec_inherit -> empty .

    LEFTBRACKET     reduce using rule 87 (dec_inherit -> empty .)


state 66

    (34) fun -> FUN fun_type fun_id LEFTPAREN . param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET
    (35) param_pos -> . param
    (36) param_pos -> . empty
    (37) param -> . type_simple ID param_more
    (123) empty -> .
    (23) type_simple -> . INT
    (24) type_simple -> . FLOAT
    (25) type_simple -> . CHAR
    (26) type_simple -> . BOOL

    RIGHTPAREN      reduce using rule 123 (empty -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    param_pos                      shift and go to state 73
    param                          shift and go to state 74
    empty                          shift and go to state 75
    type_simple                    shift and go to state 76

state 67

    (12) vars_simple_more -> COMMA vars_simple_dec .

    SEMICOLON       reduce using rule 12 (vars_simple_more -> COMMA vars_simple_dec .)


state 68

    (15) vars_simple_arr -> LEFTKEY CTEI . RIGHTKEY vars_simple_arr2

    RIGHTKEY        shift and go to state 77


state 69

    (21) vars_complex_more -> COMMA vars_complex_dec .

    SEMICOLON       reduce using rule 21 (vars_complex_more -> COMMA vars_complex_dec .)


state 70

    (1) program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN . LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    LEFTBRACKET     shift and go to state 78


state 71

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET . PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON

    PRIVATE         shift and go to state 79


state 72

    (86) dec_inherit -> COLON INHERIT . ID

    ID              shift and go to state 80


state 73

    (34) fun -> FUN fun_type fun_id LEFTPAREN param_pos . RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    RIGHTPAREN      shift and go to state 81


state 74

    (35) param_pos -> param .

    RIGHTPAREN      reduce using rule 35 (param_pos -> param .)


state 75

    (36) param_pos -> empty .

    RIGHTPAREN      reduce using rule 36 (param_pos -> empty .)


state 76

    (37) param -> type_simple . ID param_more

    ID              shift and go to state 82


state 77

    (15) vars_simple_arr -> LEFTKEY CTEI RIGHTKEY . vars_simple_arr2
    (17) vars_simple_arr2 -> . LEFTKEY CTEI RIGHTKEY
    (18) vars_simple_arr2 -> . empty
    (123) empty -> .

    LEFTKEY         shift and go to state 83
    COMMA           reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)

    vars_simple_arr2               shift and go to state 84
    empty                          shift and go to state 85

state 78

    (1) program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET . dec_vars_mult dec_block RIGHTBRACKET
    (2) dec_vars_mult -> . dec_vars_idk
    (3) dec_vars_mult -> . empty
    (4) dec_vars_idk -> . dec_vars dec_vars_more
    (123) empty -> .
    (7) dec_vars -> . VAR vars SEMICOLON

    ID              reduce using rule 123 (empty -> .)
    INCO            reduce using rule 123 (empty -> .)
    OUTCO           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    RETURN          reduce using rule 123 (empty -> .)
    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    VAR             shift and go to state 9

    dec_vars_mult                  shift and go to state 86
    dec_vars_idk                   shift and go to state 6
    empty                          shift and go to state 7
    dec_vars                       shift and go to state 8

state 79

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE . COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON

    COLON           shift and go to state 87


state 80

    (86) dec_inherit -> COLON INHERIT ID .

    LEFTBRACKET     reduce using rule 86 (dec_inherit -> COLON INHERIT ID .)


state 81

    (34) fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN . LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    LEFTBRACKET     shift and go to state 88


state 82

    (37) param -> type_simple ID . param_more
    (38) param_more -> . COMMA param
    (39) param_more -> . empty
    (123) empty -> .

    COMMA           shift and go to state 90
    RIGHTPAREN      reduce using rule 123 (empty -> .)

    param_more                     shift and go to state 89
    empty                          shift and go to state 91

state 83

    (17) vars_simple_arr2 -> LEFTKEY . CTEI RIGHTKEY

    CTEI            shift and go to state 92


state 84

    (15) vars_simple_arr -> LEFTKEY CTEI RIGHTKEY vars_simple_arr2 .

    COMMA           reduce using rule 15 (vars_simple_arr -> LEFTKEY CTEI RIGHTKEY vars_simple_arr2 .)
    SEMICOLON       reduce using rule 15 (vars_simple_arr -> LEFTKEY CTEI RIGHTKEY vars_simple_arr2 .)


state 85

    (18) vars_simple_arr2 -> empty .

    COMMA           reduce using rule 18 (vars_simple_arr2 -> empty .)
    SEMICOLON       reduce using rule 18 (vars_simple_arr2 -> empty .)


state 86

    (1) program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult . dec_block RIGHTBRACKET
    (43) dec_block -> . block
    (44) dec_block -> . empty
    (45) block -> . statement block_more
    (123) empty -> .
    (48) statement -> . dec_assign
    (49) statement -> . dec_call
    (50) statement -> . dec_read
    (51) statement -> . dec_write
    (52) statement -> . dec_condition
    (53) statement -> . dec_cycle
    (54) statement -> . dec_method
    (55) statement -> . fun_return
    (88) dec_assign -> . var_id ASSIGN hyper_call SEMICOLON
    (89) dec_call -> . ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON
    (96) dec_read -> . INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON
    (97) dec_write -> . OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON
    (101) dec_condition -> . IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else
    (104) dec_cycle -> . WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET
    (105) dec_method -> . ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON
    (42) fun_return -> . RETURN dec_exp_method SEMICOLON
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY

    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    ID              shift and go to state 93
    INCO            shift and go to state 107
    OUTCO           shift and go to state 108
    IF              shift and go to state 109
    WHILE           shift and go to state 110
    RETURN          shift and go to state 111

    dec_block                      shift and go to state 94
    block                          shift and go to state 95
    empty                          shift and go to state 96
    statement                      shift and go to state 97
    dec_assign                     shift and go to state 98
    dec_call                       shift and go to state 99
    dec_read                       shift and go to state 100
    dec_write                      shift and go to state 101
    dec_condition                  shift and go to state 102
    dec_cycle                      shift and go to state 103
    dec_method                     shift and go to state 104
    fun_return                     shift and go to state 105
    var_id                         shift and go to state 106

state 87

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON . dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON
    (2) dec_vars_mult -> . dec_vars_idk
    (3) dec_vars_mult -> . empty
    (4) dec_vars_idk -> . dec_vars dec_vars_more
    (123) empty -> .
    (7) dec_vars -> . VAR vars SEMICOLON

    FUN             reduce using rule 123 (empty -> .)
    PUBLIC          reduce using rule 123 (empty -> .)
    VAR             shift and go to state 9

    dec_vars_mult                  shift and go to state 112
    dec_vars_idk                   shift and go to state 6
    empty                          shift and go to state 7
    dec_vars                       shift and go to state 8

state 88

    (34) fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET . dec_vars_mult dec_block RIGHTBRACKET
    (2) dec_vars_mult -> . dec_vars_idk
    (3) dec_vars_mult -> . empty
    (4) dec_vars_idk -> . dec_vars dec_vars_more
    (123) empty -> .
    (7) dec_vars -> . VAR vars SEMICOLON

    ID              reduce using rule 123 (empty -> .)
    INCO            reduce using rule 123 (empty -> .)
    OUTCO           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    RETURN          reduce using rule 123 (empty -> .)
    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    VAR             shift and go to state 9

    dec_vars_mult                  shift and go to state 113
    dec_vars_idk                   shift and go to state 6
    empty                          shift and go to state 7
    dec_vars                       shift and go to state 8

state 89

    (37) param -> type_simple ID param_more .

    RIGHTPAREN      reduce using rule 37 (param -> type_simple ID param_more .)


state 90

    (38) param_more -> COMMA . param
    (37) param -> . type_simple ID param_more
    (23) type_simple -> . INT
    (24) type_simple -> . FLOAT
    (25) type_simple -> . CHAR
    (26) type_simple -> . BOOL

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25
    BOOL            shift and go to state 26

    param                          shift and go to state 114
    type_simple                    shift and go to state 76

state 91

    (39) param_more -> empty .

    RIGHTPAREN      reduce using rule 39 (param_more -> empty .)


state 92

    (17) vars_simple_arr2 -> LEFTKEY CTEI . RIGHTKEY

    RIGHTKEY        shift and go to state 115


state 93

    (89) dec_call -> ID . LEFTPAREN call_pos RIGHTPAREN SEMICOLON
    (105) dec_method -> ID . DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON
    (119) var_id -> ID .
    (120) var_id -> ID . LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> ID . LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY

    LEFTPAREN       shift and go to state 116
    DOT             shift and go to state 117
    ASSIGN          reduce using rule 119 (var_id -> ID .)
    LEFTKEY         shift and go to state 118


state 94

    (1) program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 119


state 95

    (43) dec_block -> block .

    RIGHTBRACKET    reduce using rule 43 (dec_block -> block .)


state 96

    (44) dec_block -> empty .

    RIGHTBRACKET    reduce using rule 44 (dec_block -> empty .)


state 97

    (45) block -> statement . block_more
    (46) block_more -> . block
    (47) block_more -> . empty
    (45) block -> . statement block_more
    (123) empty -> .
    (48) statement -> . dec_assign
    (49) statement -> . dec_call
    (50) statement -> . dec_read
    (51) statement -> . dec_write
    (52) statement -> . dec_condition
    (53) statement -> . dec_cycle
    (54) statement -> . dec_method
    (55) statement -> . fun_return
    (88) dec_assign -> . var_id ASSIGN hyper_call SEMICOLON
    (89) dec_call -> . ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON
    (96) dec_read -> . INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON
    (97) dec_write -> . OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON
    (101) dec_condition -> . IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else
    (104) dec_cycle -> . WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET
    (105) dec_method -> . ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON
    (42) fun_return -> . RETURN dec_exp_method SEMICOLON
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY

    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    ID              shift and go to state 93
    INCO            shift and go to state 107
    OUTCO           shift and go to state 108
    IF              shift and go to state 109
    WHILE           shift and go to state 110
    RETURN          shift and go to state 111

    statement                      shift and go to state 97
    block_more                     shift and go to state 120
    block                          shift and go to state 121
    empty                          shift and go to state 122
    dec_assign                     shift and go to state 98
    dec_call                       shift and go to state 99
    dec_read                       shift and go to state 100
    dec_write                      shift and go to state 101
    dec_condition                  shift and go to state 102
    dec_cycle                      shift and go to state 103
    dec_method                     shift and go to state 104
    fun_return                     shift and go to state 105
    var_id                         shift and go to state 106

state 98

    (48) statement -> dec_assign .

    ID              reduce using rule 48 (statement -> dec_assign .)
    INCO            reduce using rule 48 (statement -> dec_assign .)
    OUTCO           reduce using rule 48 (statement -> dec_assign .)
    IF              reduce using rule 48 (statement -> dec_assign .)
    WHILE           reduce using rule 48 (statement -> dec_assign .)
    RETURN          reduce using rule 48 (statement -> dec_assign .)
    RIGHTBRACKET    reduce using rule 48 (statement -> dec_assign .)


state 99

    (49) statement -> dec_call .

    ID              reduce using rule 49 (statement -> dec_call .)
    INCO            reduce using rule 49 (statement -> dec_call .)
    OUTCO           reduce using rule 49 (statement -> dec_call .)
    IF              reduce using rule 49 (statement -> dec_call .)
    WHILE           reduce using rule 49 (statement -> dec_call .)
    RETURN          reduce using rule 49 (statement -> dec_call .)
    RIGHTBRACKET    reduce using rule 49 (statement -> dec_call .)


state 100

    (50) statement -> dec_read .

    ID              reduce using rule 50 (statement -> dec_read .)
    INCO            reduce using rule 50 (statement -> dec_read .)
    OUTCO           reduce using rule 50 (statement -> dec_read .)
    IF              reduce using rule 50 (statement -> dec_read .)
    WHILE           reduce using rule 50 (statement -> dec_read .)
    RETURN          reduce using rule 50 (statement -> dec_read .)
    RIGHTBRACKET    reduce using rule 50 (statement -> dec_read .)


state 101

    (51) statement -> dec_write .

    ID              reduce using rule 51 (statement -> dec_write .)
    INCO            reduce using rule 51 (statement -> dec_write .)
    OUTCO           reduce using rule 51 (statement -> dec_write .)
    IF              reduce using rule 51 (statement -> dec_write .)
    WHILE           reduce using rule 51 (statement -> dec_write .)
    RETURN          reduce using rule 51 (statement -> dec_write .)
    RIGHTBRACKET    reduce using rule 51 (statement -> dec_write .)


state 102

    (52) statement -> dec_condition .

    ID              reduce using rule 52 (statement -> dec_condition .)
    INCO            reduce using rule 52 (statement -> dec_condition .)
    OUTCO           reduce using rule 52 (statement -> dec_condition .)
    IF              reduce using rule 52 (statement -> dec_condition .)
    WHILE           reduce using rule 52 (statement -> dec_condition .)
    RETURN          reduce using rule 52 (statement -> dec_condition .)
    RIGHTBRACKET    reduce using rule 52 (statement -> dec_condition .)


state 103

    (53) statement -> dec_cycle .

    ID              reduce using rule 53 (statement -> dec_cycle .)
    INCO            reduce using rule 53 (statement -> dec_cycle .)
    OUTCO           reduce using rule 53 (statement -> dec_cycle .)
    IF              reduce using rule 53 (statement -> dec_cycle .)
    WHILE           reduce using rule 53 (statement -> dec_cycle .)
    RETURN          reduce using rule 53 (statement -> dec_cycle .)
    RIGHTBRACKET    reduce using rule 53 (statement -> dec_cycle .)


state 104

    (54) statement -> dec_method .

    ID              reduce using rule 54 (statement -> dec_method .)
    INCO            reduce using rule 54 (statement -> dec_method .)
    OUTCO           reduce using rule 54 (statement -> dec_method .)
    IF              reduce using rule 54 (statement -> dec_method .)
    WHILE           reduce using rule 54 (statement -> dec_method .)
    RETURN          reduce using rule 54 (statement -> dec_method .)
    RIGHTBRACKET    reduce using rule 54 (statement -> dec_method .)


state 105

    (55) statement -> fun_return .

    ID              reduce using rule 55 (statement -> fun_return .)
    INCO            reduce using rule 55 (statement -> fun_return .)
    OUTCO           reduce using rule 55 (statement -> fun_return .)
    IF              reduce using rule 55 (statement -> fun_return .)
    WHILE           reduce using rule 55 (statement -> fun_return .)
    RETURN          reduce using rule 55 (statement -> fun_return .)
    RIGHTBRACKET    reduce using rule 55 (statement -> fun_return .)


state 106

    (88) dec_assign -> var_id . ASSIGN hyper_call SEMICOLON

    ASSIGN          shift and go to state 123


state 107

    (96) dec_read -> INCO . LEFTPAREN var_id RIGHTPAREN SEMICOLON

    LEFTPAREN       shift and go to state 124


state 108

    (97) dec_write -> OUTCO . LEFTPAREN write RIGHTPAREN SEMICOLON

    LEFTPAREN       shift and go to state 125


state 109

    (101) dec_condition -> IF . LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else

    LEFTPAREN       shift and go to state 126


state 110

    (104) dec_cycle -> WHILE . LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET

    LEFTPAREN       shift and go to state 127


state 111

    (42) fun_return -> RETURN . dec_exp_method SEMICOLON
    (61) dec_exp_method -> . dec_exp_s
    (62) dec_exp_method -> . empty
    (57) dec_exp_s -> . dec_term pm_op
    (123) empty -> .
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    SEMICOLON       reduce using rule 123 (empty -> .)
    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_exp_method                 shift and go to state 128
    dec_exp_s                      shift and go to state 129
    empty                          shift and go to state 130
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 112

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult . dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON
    (29) dec_fun -> . dec_fun_idk
    (30) dec_fun -> . empty
    (31) dec_fun_idk -> . fun dec_fun_more
    (123) empty -> .
    (34) fun -> . FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    PUBLIC          reduce using rule 123 (empty -> .)
    FUN             shift and go to state 14

    dec_fun                        shift and go to state 146
    dec_fun_idk                    shift and go to state 11
    empty                          shift and go to state 12
    fun                            shift and go to state 13

state 113

    (34) fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult . dec_block RIGHTBRACKET
    (43) dec_block -> . block
    (44) dec_block -> . empty
    (45) block -> . statement block_more
    (123) empty -> .
    (48) statement -> . dec_assign
    (49) statement -> . dec_call
    (50) statement -> . dec_read
    (51) statement -> . dec_write
    (52) statement -> . dec_condition
    (53) statement -> . dec_cycle
    (54) statement -> . dec_method
    (55) statement -> . fun_return
    (88) dec_assign -> . var_id ASSIGN hyper_call SEMICOLON
    (89) dec_call -> . ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON
    (96) dec_read -> . INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON
    (97) dec_write -> . OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON
    (101) dec_condition -> . IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else
    (104) dec_cycle -> . WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET
    (105) dec_method -> . ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON
    (42) fun_return -> . RETURN dec_exp_method SEMICOLON
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY

    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    ID              shift and go to state 93
    INCO            shift and go to state 107
    OUTCO           shift and go to state 108
    IF              shift and go to state 109
    WHILE           shift and go to state 110
    RETURN          shift and go to state 111

    dec_block                      shift and go to state 147
    block                          shift and go to state 95
    empty                          shift and go to state 96
    statement                      shift and go to state 97
    dec_assign                     shift and go to state 98
    dec_call                       shift and go to state 99
    dec_read                       shift and go to state 100
    dec_write                      shift and go to state 101
    dec_condition                  shift and go to state 102
    dec_cycle                      shift and go to state 103
    dec_method                     shift and go to state 104
    fun_return                     shift and go to state 105
    var_id                         shift and go to state 106

state 114

    (38) param_more -> COMMA param .

    RIGHTPAREN      reduce using rule 38 (param_more -> COMMA param .)


state 115

    (17) vars_simple_arr2 -> LEFTKEY CTEI RIGHTKEY .

    COMMA           reduce using rule 17 (vars_simple_arr2 -> LEFTKEY CTEI RIGHTKEY .)
    SEMICOLON       reduce using rule 17 (vars_simple_arr2 -> LEFTKEY CTEI RIGHTKEY .)


state 116

    (89) dec_call -> ID LEFTPAREN . call_pos RIGHTPAREN SEMICOLON
    (91) call_pos -> . call
    (92) call_pos -> . empty
    (93) call -> . hyper_call call_more
    (123) empty -> .
    (69) hyper_call -> . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    RIGHTPAREN      reduce using rule 123 (empty -> .)
    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    call_pos                       shift and go to state 148
    call                           shift and go to state 149
    empty                          shift and go to state 150
    hyper_call                     shift and go to state 151
    h_exp                          shift and go to state 152
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 117

    (105) dec_method -> ID DOT . ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON

    ID              shift and go to state 155


state 118

    (120) var_id -> ID LEFTKEY . dec_exp RIGHTKEY
    (121) var_id -> ID LEFTKEY . dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (56) dec_exp -> . dec_exp_s
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_exp                        shift and go to state 156
    dec_exp_s                      shift and go to state 157
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 119

    (1) program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON dec_vars_mult dec_fun dec_class MAIN LEFTPAREN RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET .)


state 120

    (45) block -> statement block_more .

    RIGHTBRACKET    reduce using rule 45 (block -> statement block_more .)


state 121

    (46) block_more -> block .

    RIGHTBRACKET    reduce using rule 46 (block_more -> block .)


state 122

    (47) block_more -> empty .

    RIGHTBRACKET    reduce using rule 47 (block_more -> empty .)


state 123

    (88) dec_assign -> var_id ASSIGN . hyper_call SEMICOLON
    (69) hyper_call -> . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    var_id                         shift and go to state 135
    hyper_call                     shift and go to state 158
    h_exp                          shift and go to state 152
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 124

    (96) dec_read -> INCO LEFTPAREN . var_id RIGHTPAREN SEMICOLON
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY

    ID              shift and go to state 160

    var_id                         shift and go to state 159

state 125

    (97) dec_write -> OUTCO LEFTPAREN . write RIGHTPAREN SEMICOLON
    (98) write -> . print_sign write_more
    (117) print_sign -> . hyper_call
    (118) print_sign -> . SIGN
    (69) hyper_call -> . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    SIGN            shift and go to state 164
    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    write                          shift and go to state 161
    print_sign                     shift and go to state 162
    hyper_call                     shift and go to state 163
    h_exp                          shift and go to state 152
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 126

    (101) dec_condition -> IF LEFTPAREN . hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else
    (69) hyper_call -> . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    hyper_call                     shift and go to state 165
    h_exp                          shift and go to state 152
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 127

    (104) dec_cycle -> WHILE LEFTPAREN . hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET
    (69) hyper_call -> . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    hyper_call                     shift and go to state 166
    h_exp                          shift and go to state 152
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 128

    (42) fun_return -> RETURN dec_exp_method . SEMICOLON

    SEMICOLON       shift and go to state 167


state 129

    (61) dec_exp_method -> dec_exp_s .

    SEMICOLON       reduce using rule 61 (dec_exp_method -> dec_exp_s .)
    RIGHTPAREN      reduce using rule 61 (dec_exp_method -> dec_exp_s .)


state 130

    (62) dec_exp_method -> empty .

    SEMICOLON       reduce using rule 62 (dec_exp_method -> empty .)
    RIGHTPAREN      reduce using rule 62 (dec_exp_method -> empty .)


state 131

    (57) dec_exp_s -> dec_term . pm_op
    (58) pm_op -> . PLUS dec_exp_s
    (59) pm_op -> . MINUS dec_exp_s
    (60) pm_op -> . empty
    (123) empty -> .

    PLUS            shift and go to state 169
    MINUS           shift and go to state 170
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMP_LESS       reduce using rule 123 (empty -> .)
    COMP_GREATER    reduce using rule 123 (empty -> .)
    COMP_EQUAL      reduce using rule 123 (empty -> .)
    COMP_NOTEQUAL   reduce using rule 123 (empty -> .)
    COMP_AND        reduce using rule 123 (empty -> .)
    COMP_OR         reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHTPAREN      reduce using rule 123 (empty -> .)
    RIGHTKEY        reduce using rule 123 (empty -> .)

    pm_op                          shift and go to state 168
    empty                          shift and go to state 171

state 132

    (63) dec_term -> dec_fact . md_op
    (64) md_op -> . TIMES dec_term
    (65) md_op -> . DIVIDE dec_term
    (66) md_op -> . empty
    (123) empty -> .

    TIMES           shift and go to state 173
    DIVIDE          shift and go to state 174
    PLUS            reduce using rule 123 (empty -> .)
    MINUS           reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMP_LESS       reduce using rule 123 (empty -> .)
    COMP_GREATER    reduce using rule 123 (empty -> .)
    COMP_EQUAL      reduce using rule 123 (empty -> .)
    COMP_NOTEQUAL   reduce using rule 123 (empty -> .)
    COMP_AND        reduce using rule 123 (empty -> .)
    COMP_OR         reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHTPAREN      reduce using rule 123 (empty -> .)
    RIGHTKEY        reduce using rule 123 (empty -> .)

    md_op                          shift and go to state 172
    empty                          shift and go to state 175

state 133

    (67) dec_fact -> var_cte .

    TIMES           reduce using rule 67 (dec_fact -> var_cte .)
    DIVIDE          reduce using rule 67 (dec_fact -> var_cte .)
    PLUS            reduce using rule 67 (dec_fact -> var_cte .)
    MINUS           reduce using rule 67 (dec_fact -> var_cte .)
    SEMICOLON       reduce using rule 67 (dec_fact -> var_cte .)
    COMP_LESS       reduce using rule 67 (dec_fact -> var_cte .)
    COMP_GREATER    reduce using rule 67 (dec_fact -> var_cte .)
    COMP_EQUAL      reduce using rule 67 (dec_fact -> var_cte .)
    COMP_NOTEQUAL   reduce using rule 67 (dec_fact -> var_cte .)
    COMP_AND        reduce using rule 67 (dec_fact -> var_cte .)
    COMP_OR         reduce using rule 67 (dec_fact -> var_cte .)
    COMMA           reduce using rule 67 (dec_fact -> var_cte .)
    RIGHTPAREN      reduce using rule 67 (dec_fact -> var_cte .)
    RIGHTKEY        reduce using rule 67 (dec_fact -> var_cte .)


state 134

    (68) dec_fact -> LEFTPAREN . hyper_call RIGHTPAREN
    (69) hyper_call -> . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    hyper_call                     shift and go to state 176
    h_exp                          shift and go to state 152
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 135

    (106) var_cte -> var_id .

    TIMES           reduce using rule 106 (var_cte -> var_id .)
    DIVIDE          reduce using rule 106 (var_cte -> var_id .)
    PLUS            reduce using rule 106 (var_cte -> var_id .)
    MINUS           reduce using rule 106 (var_cte -> var_id .)
    SEMICOLON       reduce using rule 106 (var_cte -> var_id .)
    COMP_LESS       reduce using rule 106 (var_cte -> var_id .)
    COMP_GREATER    reduce using rule 106 (var_cte -> var_id .)
    COMP_EQUAL      reduce using rule 106 (var_cte -> var_id .)
    COMP_NOTEQUAL   reduce using rule 106 (var_cte -> var_id .)
    COMP_AND        reduce using rule 106 (var_cte -> var_id .)
    COMP_OR         reduce using rule 106 (var_cte -> var_id .)
    COMMA           reduce using rule 106 (var_cte -> var_id .)
    RIGHTPAREN      reduce using rule 106 (var_cte -> var_id .)
    RIGHTKEY        reduce using rule 106 (var_cte -> var_id .)


state 136

    (107) var_cte -> dec_call_exp .

    TIMES           reduce using rule 107 (var_cte -> dec_call_exp .)
    DIVIDE          reduce using rule 107 (var_cte -> dec_call_exp .)
    PLUS            reduce using rule 107 (var_cte -> dec_call_exp .)
    MINUS           reduce using rule 107 (var_cte -> dec_call_exp .)
    SEMICOLON       reduce using rule 107 (var_cte -> dec_call_exp .)
    COMP_LESS       reduce using rule 107 (var_cte -> dec_call_exp .)
    COMP_GREATER    reduce using rule 107 (var_cte -> dec_call_exp .)
    COMP_EQUAL      reduce using rule 107 (var_cte -> dec_call_exp .)
    COMP_NOTEQUAL   reduce using rule 107 (var_cte -> dec_call_exp .)
    COMP_AND        reduce using rule 107 (var_cte -> dec_call_exp .)
    COMP_OR         reduce using rule 107 (var_cte -> dec_call_exp .)
    COMMA           reduce using rule 107 (var_cte -> dec_call_exp .)
    RIGHTPAREN      reduce using rule 107 (var_cte -> dec_call_exp .)
    RIGHTKEY        reduce using rule 107 (var_cte -> dec_call_exp .)


state 137

    (108) var_cte -> var_const .

    TIMES           reduce using rule 108 (var_cte -> var_const .)
    DIVIDE          reduce using rule 108 (var_cte -> var_const .)
    PLUS            reduce using rule 108 (var_cte -> var_const .)
    MINUS           reduce using rule 108 (var_cte -> var_const .)
    SEMICOLON       reduce using rule 108 (var_cte -> var_const .)
    COMP_LESS       reduce using rule 108 (var_cte -> var_const .)
    COMP_GREATER    reduce using rule 108 (var_cte -> var_const .)
    COMP_EQUAL      reduce using rule 108 (var_cte -> var_const .)
    COMP_NOTEQUAL   reduce using rule 108 (var_cte -> var_const .)
    COMP_AND        reduce using rule 108 (var_cte -> var_const .)
    COMP_OR         reduce using rule 108 (var_cte -> var_const .)
    COMMA           reduce using rule 108 (var_cte -> var_const .)
    RIGHTPAREN      reduce using rule 108 (var_cte -> var_const .)
    RIGHTKEY        reduce using rule 108 (var_cte -> var_const .)


state 138

    (119) var_id -> ID .
    (120) var_id -> ID . LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> ID . LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> ID . LEFTPAREN call_pos RIGHTPAREN

    TIMES           reduce using rule 119 (var_id -> ID .)
    DIVIDE          reduce using rule 119 (var_id -> ID .)
    PLUS            reduce using rule 119 (var_id -> ID .)
    MINUS           reduce using rule 119 (var_id -> ID .)
    SEMICOLON       reduce using rule 119 (var_id -> ID .)
    COMP_LESS       reduce using rule 119 (var_id -> ID .)
    COMP_GREATER    reduce using rule 119 (var_id -> ID .)
    COMP_EQUAL      reduce using rule 119 (var_id -> ID .)
    COMP_NOTEQUAL   reduce using rule 119 (var_id -> ID .)
    COMP_AND        reduce using rule 119 (var_id -> ID .)
    COMP_OR         reduce using rule 119 (var_id -> ID .)
    COMMA           reduce using rule 119 (var_id -> ID .)
    RIGHTPAREN      reduce using rule 119 (var_id -> ID .)
    RIGHTKEY        reduce using rule 119 (var_id -> ID .)
    LEFTKEY         shift and go to state 118
    LEFTPAREN       shift and go to state 177


state 139

    (109) var_const -> cte_num .

    TIMES           reduce using rule 109 (var_const -> cte_num .)
    DIVIDE          reduce using rule 109 (var_const -> cte_num .)
    PLUS            reduce using rule 109 (var_const -> cte_num .)
    MINUS           reduce using rule 109 (var_const -> cte_num .)
    SEMICOLON       reduce using rule 109 (var_const -> cte_num .)
    COMP_LESS       reduce using rule 109 (var_const -> cte_num .)
    COMP_GREATER    reduce using rule 109 (var_const -> cte_num .)
    COMP_EQUAL      reduce using rule 109 (var_const -> cte_num .)
    COMP_NOTEQUAL   reduce using rule 109 (var_const -> cte_num .)
    COMP_AND        reduce using rule 109 (var_const -> cte_num .)
    COMP_OR         reduce using rule 109 (var_const -> cte_num .)
    COMMA           reduce using rule 109 (var_const -> cte_num .)
    RIGHTPAREN      reduce using rule 109 (var_const -> cte_num .)
    RIGHTKEY        reduce using rule 109 (var_const -> cte_num .)


state 140

    (110) var_const -> CHAR_DEC .

    TIMES           reduce using rule 110 (var_const -> CHAR_DEC .)
    DIVIDE          reduce using rule 110 (var_const -> CHAR_DEC .)
    PLUS            reduce using rule 110 (var_const -> CHAR_DEC .)
    MINUS           reduce using rule 110 (var_const -> CHAR_DEC .)
    SEMICOLON       reduce using rule 110 (var_const -> CHAR_DEC .)
    COMP_LESS       reduce using rule 110 (var_const -> CHAR_DEC .)
    COMP_GREATER    reduce using rule 110 (var_const -> CHAR_DEC .)
    COMP_EQUAL      reduce using rule 110 (var_const -> CHAR_DEC .)
    COMP_NOTEQUAL   reduce using rule 110 (var_const -> CHAR_DEC .)
    COMP_AND        reduce using rule 110 (var_const -> CHAR_DEC .)
    COMP_OR         reduce using rule 110 (var_const -> CHAR_DEC .)
    COMMA           reduce using rule 110 (var_const -> CHAR_DEC .)
    RIGHTPAREN      reduce using rule 110 (var_const -> CHAR_DEC .)
    RIGHTKEY        reduce using rule 110 (var_const -> CHAR_DEC .)


state 141

    (111) var_const -> TRUE .

    TIMES           reduce using rule 111 (var_const -> TRUE .)
    DIVIDE          reduce using rule 111 (var_const -> TRUE .)
    PLUS            reduce using rule 111 (var_const -> TRUE .)
    MINUS           reduce using rule 111 (var_const -> TRUE .)
    SEMICOLON       reduce using rule 111 (var_const -> TRUE .)
    COMP_LESS       reduce using rule 111 (var_const -> TRUE .)
    COMP_GREATER    reduce using rule 111 (var_const -> TRUE .)
    COMP_EQUAL      reduce using rule 111 (var_const -> TRUE .)
    COMP_NOTEQUAL   reduce using rule 111 (var_const -> TRUE .)
    COMP_AND        reduce using rule 111 (var_const -> TRUE .)
    COMP_OR         reduce using rule 111 (var_const -> TRUE .)
    COMMA           reduce using rule 111 (var_const -> TRUE .)
    RIGHTPAREN      reduce using rule 111 (var_const -> TRUE .)
    RIGHTKEY        reduce using rule 111 (var_const -> TRUE .)


state 142

    (112) var_const -> FALSE .

    TIMES           reduce using rule 112 (var_const -> FALSE .)
    DIVIDE          reduce using rule 112 (var_const -> FALSE .)
    PLUS            reduce using rule 112 (var_const -> FALSE .)
    MINUS           reduce using rule 112 (var_const -> FALSE .)
    SEMICOLON       reduce using rule 112 (var_const -> FALSE .)
    COMP_LESS       reduce using rule 112 (var_const -> FALSE .)
    COMP_GREATER    reduce using rule 112 (var_const -> FALSE .)
    COMP_EQUAL      reduce using rule 112 (var_const -> FALSE .)
    COMP_NOTEQUAL   reduce using rule 112 (var_const -> FALSE .)
    COMP_AND        reduce using rule 112 (var_const -> FALSE .)
    COMP_OR         reduce using rule 112 (var_const -> FALSE .)
    COMMA           reduce using rule 112 (var_const -> FALSE .)
    RIGHTPAREN      reduce using rule 112 (var_const -> FALSE .)
    RIGHTKEY        reduce using rule 112 (var_const -> FALSE .)


state 143

    (113) cte_num -> CTEF .

    TIMES           reduce using rule 113 (cte_num -> CTEF .)
    DIVIDE          reduce using rule 113 (cte_num -> CTEF .)
    PLUS            reduce using rule 113 (cte_num -> CTEF .)
    MINUS           reduce using rule 113 (cte_num -> CTEF .)
    SEMICOLON       reduce using rule 113 (cte_num -> CTEF .)
    COMP_LESS       reduce using rule 113 (cte_num -> CTEF .)
    COMP_GREATER    reduce using rule 113 (cte_num -> CTEF .)
    COMP_EQUAL      reduce using rule 113 (cte_num -> CTEF .)
    COMP_NOTEQUAL   reduce using rule 113 (cte_num -> CTEF .)
    COMP_AND        reduce using rule 113 (cte_num -> CTEF .)
    COMP_OR         reduce using rule 113 (cte_num -> CTEF .)
    COMMA           reduce using rule 113 (cte_num -> CTEF .)
    RIGHTPAREN      reduce using rule 113 (cte_num -> CTEF .)
    RIGHTKEY        reduce using rule 113 (cte_num -> CTEF .)


state 144

    (114) cte_num -> CTEI .

    TIMES           reduce using rule 114 (cte_num -> CTEI .)
    DIVIDE          reduce using rule 114 (cte_num -> CTEI .)
    PLUS            reduce using rule 114 (cte_num -> CTEI .)
    MINUS           reduce using rule 114 (cte_num -> CTEI .)
    SEMICOLON       reduce using rule 114 (cte_num -> CTEI .)
    COMP_LESS       reduce using rule 114 (cte_num -> CTEI .)
    COMP_GREATER    reduce using rule 114 (cte_num -> CTEI .)
    COMP_EQUAL      reduce using rule 114 (cte_num -> CTEI .)
    COMP_NOTEQUAL   reduce using rule 114 (cte_num -> CTEI .)
    COMP_AND        reduce using rule 114 (cte_num -> CTEI .)
    COMP_OR         reduce using rule 114 (cte_num -> CTEI .)
    COMMA           reduce using rule 114 (cte_num -> CTEI .)
    RIGHTPAREN      reduce using rule 114 (cte_num -> CTEI .)
    RIGHTKEY        reduce using rule 114 (cte_num -> CTEI .)


state 145

    (115) cte_num -> MINUS . CTEI
    (116) cte_num -> MINUS . CTEF

    CTEI            shift and go to state 178
    CTEF            shift and go to state 179


state 146

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun . PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON

    PUBLIC          shift and go to state 180


state 147

    (34) fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 181


state 148

    (89) dec_call -> ID LEFTPAREN call_pos . RIGHTPAREN SEMICOLON

    RIGHTPAREN      shift and go to state 182


state 149

    (91) call_pos -> call .

    RIGHTPAREN      reduce using rule 91 (call_pos -> call .)


state 150

    (92) call_pos -> empty .

    RIGHTPAREN      reduce using rule 92 (call_pos -> empty .)


state 151

    (93) call -> hyper_call . call_more
    (94) call_more -> . COMMA call
    (95) call_more -> . empty
    (123) empty -> .

    COMMA           shift and go to state 184
    RIGHTPAREN      reduce using rule 123 (empty -> .)

    call_more                      shift and go to state 183
    empty                          shift and go to state 185

state 152

    (69) hyper_call -> h_exp .

    COMMA           reduce using rule 69 (hyper_call -> h_exp .)
    RIGHTPAREN      reduce using rule 69 (hyper_call -> h_exp .)
    SEMICOLON       reduce using rule 69 (hyper_call -> h_exp .)


state 153

    (70) h_exp -> s_exp . ao_op
    (71) ao_op -> . COMP_AND h_exp
    (72) ao_op -> . COMP_OR h_exp
    (73) ao_op -> . empty
    (123) empty -> .

    COMP_AND        shift and go to state 187
    COMP_OR         shift and go to state 188
    COMMA           reduce using rule 123 (empty -> .)
    RIGHTPAREN      reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)

    ao_op                          shift and go to state 186
    empty                          shift and go to state 189

state 154

    (74) s_exp -> dec_exp_s . comp_op
    (75) comp_op -> . COMP_LESS dec_exp_s
    (76) comp_op -> . COMP_GREATER dec_exp_s
    (77) comp_op -> . COMP_EQUAL dec_exp_s
    (78) comp_op -> . COMP_NOTEQUAL dec_exp_s
    (79) comp_op -> . empty
    (123) empty -> .

    COMP_LESS       shift and go to state 191
    COMP_GREATER    shift and go to state 192
    COMP_EQUAL      shift and go to state 193
    COMP_NOTEQUAL   shift and go to state 194
    COMP_AND        reduce using rule 123 (empty -> .)
    COMP_OR         reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHTPAREN      reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)

    comp_op                        shift and go to state 190
    empty                          shift and go to state 195

state 155

    (105) dec_method -> ID DOT ID . LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON

    LEFTPAREN       shift and go to state 196


state 156

    (120) var_id -> ID LEFTKEY dec_exp . RIGHTKEY
    (121) var_id -> ID LEFTKEY dec_exp . RIGHTKEY LEFTKEY dec_exp RIGHTKEY

    RIGHTKEY        shift and go to state 197


state 157

    (56) dec_exp -> dec_exp_s .

    RIGHTKEY        reduce using rule 56 (dec_exp -> dec_exp_s .)


state 158

    (88) dec_assign -> var_id ASSIGN hyper_call . SEMICOLON

    SEMICOLON       shift and go to state 198


state 159

    (96) dec_read -> INCO LEFTPAREN var_id . RIGHTPAREN SEMICOLON

    RIGHTPAREN      shift and go to state 199


state 160

    (119) var_id -> ID .
    (120) var_id -> ID . LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> ID . LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY

    RIGHTPAREN      reduce using rule 119 (var_id -> ID .)
    LEFTKEY         shift and go to state 118


state 161

    (97) dec_write -> OUTCO LEFTPAREN write . RIGHTPAREN SEMICOLON

    RIGHTPAREN      shift and go to state 200


state 162

    (98) write -> print_sign . write_more
    (99) write_more -> . COMMA write
    (100) write_more -> . empty
    (123) empty -> .

    COMMA           shift and go to state 202
    RIGHTPAREN      reduce using rule 123 (empty -> .)

    write_more                     shift and go to state 201
    empty                          shift and go to state 203

state 163

    (117) print_sign -> hyper_call .

    COMMA           reduce using rule 117 (print_sign -> hyper_call .)
    RIGHTPAREN      reduce using rule 117 (print_sign -> hyper_call .)


state 164

    (118) print_sign -> SIGN .

    COMMA           reduce using rule 118 (print_sign -> SIGN .)
    RIGHTPAREN      reduce using rule 118 (print_sign -> SIGN .)


state 165

    (101) dec_condition -> IF LEFTPAREN hyper_call . RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else

    RIGHTPAREN      shift and go to state 204


state 166

    (104) dec_cycle -> WHILE LEFTPAREN hyper_call . RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET

    RIGHTPAREN      shift and go to state 205


state 167

    (42) fun_return -> RETURN dec_exp_method SEMICOLON .

    ID              reduce using rule 42 (fun_return -> RETURN dec_exp_method SEMICOLON .)
    INCO            reduce using rule 42 (fun_return -> RETURN dec_exp_method SEMICOLON .)
    OUTCO           reduce using rule 42 (fun_return -> RETURN dec_exp_method SEMICOLON .)
    IF              reduce using rule 42 (fun_return -> RETURN dec_exp_method SEMICOLON .)
    WHILE           reduce using rule 42 (fun_return -> RETURN dec_exp_method SEMICOLON .)
    RETURN          reduce using rule 42 (fun_return -> RETURN dec_exp_method SEMICOLON .)
    RIGHTBRACKET    reduce using rule 42 (fun_return -> RETURN dec_exp_method SEMICOLON .)


state 168

    (57) dec_exp_s -> dec_term pm_op .

    SEMICOLON       reduce using rule 57 (dec_exp_s -> dec_term pm_op .)
    COMP_LESS       reduce using rule 57 (dec_exp_s -> dec_term pm_op .)
    COMP_GREATER    reduce using rule 57 (dec_exp_s -> dec_term pm_op .)
    COMP_EQUAL      reduce using rule 57 (dec_exp_s -> dec_term pm_op .)
    COMP_NOTEQUAL   reduce using rule 57 (dec_exp_s -> dec_term pm_op .)
    COMP_AND        reduce using rule 57 (dec_exp_s -> dec_term pm_op .)
    COMP_OR         reduce using rule 57 (dec_exp_s -> dec_term pm_op .)
    COMMA           reduce using rule 57 (dec_exp_s -> dec_term pm_op .)
    RIGHTPAREN      reduce using rule 57 (dec_exp_s -> dec_term pm_op .)
    RIGHTKEY        reduce using rule 57 (dec_exp_s -> dec_term pm_op .)


state 169

    (58) pm_op -> PLUS . dec_exp_s
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_exp_s                      shift and go to state 206
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 170

    (59) pm_op -> MINUS . dec_exp_s
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_exp_s                      shift and go to state 207
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 171

    (60) pm_op -> empty .

    SEMICOLON       reduce using rule 60 (pm_op -> empty .)
    COMP_LESS       reduce using rule 60 (pm_op -> empty .)
    COMP_GREATER    reduce using rule 60 (pm_op -> empty .)
    COMP_EQUAL      reduce using rule 60 (pm_op -> empty .)
    COMP_NOTEQUAL   reduce using rule 60 (pm_op -> empty .)
    COMP_AND        reduce using rule 60 (pm_op -> empty .)
    COMP_OR         reduce using rule 60 (pm_op -> empty .)
    COMMA           reduce using rule 60 (pm_op -> empty .)
    RIGHTPAREN      reduce using rule 60 (pm_op -> empty .)
    RIGHTKEY        reduce using rule 60 (pm_op -> empty .)


state 172

    (63) dec_term -> dec_fact md_op .

    PLUS            reduce using rule 63 (dec_term -> dec_fact md_op .)
    MINUS           reduce using rule 63 (dec_term -> dec_fact md_op .)
    SEMICOLON       reduce using rule 63 (dec_term -> dec_fact md_op .)
    COMP_LESS       reduce using rule 63 (dec_term -> dec_fact md_op .)
    COMP_GREATER    reduce using rule 63 (dec_term -> dec_fact md_op .)
    COMP_EQUAL      reduce using rule 63 (dec_term -> dec_fact md_op .)
    COMP_NOTEQUAL   reduce using rule 63 (dec_term -> dec_fact md_op .)
    COMP_AND        reduce using rule 63 (dec_term -> dec_fact md_op .)
    COMP_OR         reduce using rule 63 (dec_term -> dec_fact md_op .)
    COMMA           reduce using rule 63 (dec_term -> dec_fact md_op .)
    RIGHTPAREN      reduce using rule 63 (dec_term -> dec_fact md_op .)
    RIGHTKEY        reduce using rule 63 (dec_term -> dec_fact md_op .)


state 173

    (64) md_op -> TIMES . dec_term
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_term                       shift and go to state 208
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 174

    (65) md_op -> DIVIDE . dec_term
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_term                       shift and go to state 209
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 175

    (66) md_op -> empty .

    PLUS            reduce using rule 66 (md_op -> empty .)
    MINUS           reduce using rule 66 (md_op -> empty .)
    SEMICOLON       reduce using rule 66 (md_op -> empty .)
    COMP_LESS       reduce using rule 66 (md_op -> empty .)
    COMP_GREATER    reduce using rule 66 (md_op -> empty .)
    COMP_EQUAL      reduce using rule 66 (md_op -> empty .)
    COMP_NOTEQUAL   reduce using rule 66 (md_op -> empty .)
    COMP_AND        reduce using rule 66 (md_op -> empty .)
    COMP_OR         reduce using rule 66 (md_op -> empty .)
    COMMA           reduce using rule 66 (md_op -> empty .)
    RIGHTPAREN      reduce using rule 66 (md_op -> empty .)
    RIGHTKEY        reduce using rule 66 (md_op -> empty .)


state 176

    (68) dec_fact -> LEFTPAREN hyper_call . RIGHTPAREN

    RIGHTPAREN      shift and go to state 210


state 177

    (90) dec_call_exp -> ID LEFTPAREN . call_pos RIGHTPAREN
    (91) call_pos -> . call
    (92) call_pos -> . empty
    (93) call -> . hyper_call call_more
    (123) empty -> .
    (69) hyper_call -> . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    RIGHTPAREN      reduce using rule 123 (empty -> .)
    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    call_pos                       shift and go to state 211
    call                           shift and go to state 149
    empty                          shift and go to state 150
    hyper_call                     shift and go to state 151
    h_exp                          shift and go to state 152
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 178

    (115) cte_num -> MINUS CTEI .

    TIMES           reduce using rule 115 (cte_num -> MINUS CTEI .)
    DIVIDE          reduce using rule 115 (cte_num -> MINUS CTEI .)
    PLUS            reduce using rule 115 (cte_num -> MINUS CTEI .)
    MINUS           reduce using rule 115 (cte_num -> MINUS CTEI .)
    SEMICOLON       reduce using rule 115 (cte_num -> MINUS CTEI .)
    COMP_LESS       reduce using rule 115 (cte_num -> MINUS CTEI .)
    COMP_GREATER    reduce using rule 115 (cte_num -> MINUS CTEI .)
    COMP_EQUAL      reduce using rule 115 (cte_num -> MINUS CTEI .)
    COMP_NOTEQUAL   reduce using rule 115 (cte_num -> MINUS CTEI .)
    COMP_AND        reduce using rule 115 (cte_num -> MINUS CTEI .)
    COMP_OR         reduce using rule 115 (cte_num -> MINUS CTEI .)
    COMMA           reduce using rule 115 (cte_num -> MINUS CTEI .)
    RIGHTPAREN      reduce using rule 115 (cte_num -> MINUS CTEI .)
    RIGHTKEY        reduce using rule 115 (cte_num -> MINUS CTEI .)


state 179

    (116) cte_num -> MINUS CTEF .

    TIMES           reduce using rule 116 (cte_num -> MINUS CTEF .)
    DIVIDE          reduce using rule 116 (cte_num -> MINUS CTEF .)
    PLUS            reduce using rule 116 (cte_num -> MINUS CTEF .)
    MINUS           reduce using rule 116 (cte_num -> MINUS CTEF .)
    SEMICOLON       reduce using rule 116 (cte_num -> MINUS CTEF .)
    COMP_LESS       reduce using rule 116 (cte_num -> MINUS CTEF .)
    COMP_GREATER    reduce using rule 116 (cte_num -> MINUS CTEF .)
    COMP_EQUAL      reduce using rule 116 (cte_num -> MINUS CTEF .)
    COMP_NOTEQUAL   reduce using rule 116 (cte_num -> MINUS CTEF .)
    COMP_AND        reduce using rule 116 (cte_num -> MINUS CTEF .)
    COMP_OR         reduce using rule 116 (cte_num -> MINUS CTEF .)
    COMMA           reduce using rule 116 (cte_num -> MINUS CTEF .)
    RIGHTPAREN      reduce using rule 116 (cte_num -> MINUS CTEF .)
    RIGHTKEY        reduce using rule 116 (cte_num -> MINUS CTEF .)


state 180

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC . COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON

    COLON           shift and go to state 212


state 181

    (34) fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET .

    FUN             reduce using rule 34 (fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET .)
    CLASS           reduce using rule 34 (fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET .)
    MAIN            reduce using rule 34 (fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET .)
    PUBLIC          reduce using rule 34 (fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 34 (fun -> FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET .)


state 182

    (89) dec_call -> ID LEFTPAREN call_pos RIGHTPAREN . SEMICOLON

    SEMICOLON       shift and go to state 213


state 183

    (93) call -> hyper_call call_more .

    RIGHTPAREN      reduce using rule 93 (call -> hyper_call call_more .)


state 184

    (94) call_more -> COMMA . call
    (93) call -> . hyper_call call_more
    (69) hyper_call -> . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    call                           shift and go to state 214
    hyper_call                     shift and go to state 151
    h_exp                          shift and go to state 152
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 185

    (95) call_more -> empty .

    RIGHTPAREN      reduce using rule 95 (call_more -> empty .)


state 186

    (70) h_exp -> s_exp ao_op .

    COMMA           reduce using rule 70 (h_exp -> s_exp ao_op .)
    RIGHTPAREN      reduce using rule 70 (h_exp -> s_exp ao_op .)
    SEMICOLON       reduce using rule 70 (h_exp -> s_exp ao_op .)


state 187

    (71) ao_op -> COMP_AND . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    h_exp                          shift and go to state 215
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 188

    (72) ao_op -> COMP_OR . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    h_exp                          shift and go to state 216
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 189

    (73) ao_op -> empty .

    COMMA           reduce using rule 73 (ao_op -> empty .)
    RIGHTPAREN      reduce using rule 73 (ao_op -> empty .)
    SEMICOLON       reduce using rule 73 (ao_op -> empty .)


state 190

    (74) s_exp -> dec_exp_s comp_op .

    COMP_AND        reduce using rule 74 (s_exp -> dec_exp_s comp_op .)
    COMP_OR         reduce using rule 74 (s_exp -> dec_exp_s comp_op .)
    COMMA           reduce using rule 74 (s_exp -> dec_exp_s comp_op .)
    RIGHTPAREN      reduce using rule 74 (s_exp -> dec_exp_s comp_op .)
    SEMICOLON       reduce using rule 74 (s_exp -> dec_exp_s comp_op .)


state 191

    (75) comp_op -> COMP_LESS . dec_exp_s
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_exp_s                      shift and go to state 217
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 192

    (76) comp_op -> COMP_GREATER . dec_exp_s
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_exp_s                      shift and go to state 218
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 193

    (77) comp_op -> COMP_EQUAL . dec_exp_s
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_exp_s                      shift and go to state 219
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 194

    (78) comp_op -> COMP_NOTEQUAL . dec_exp_s
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_exp_s                      shift and go to state 220
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 195

    (79) comp_op -> empty .

    COMP_AND        reduce using rule 79 (comp_op -> empty .)
    COMP_OR         reduce using rule 79 (comp_op -> empty .)
    COMMA           reduce using rule 79 (comp_op -> empty .)
    RIGHTPAREN      reduce using rule 79 (comp_op -> empty .)
    SEMICOLON       reduce using rule 79 (comp_op -> empty .)


state 196

    (105) dec_method -> ID DOT ID LEFTPAREN . dec_exp_method RIGHTPAREN SEMICOLON
    (61) dec_exp_method -> . dec_exp_s
    (62) dec_exp_method -> . empty
    (57) dec_exp_s -> . dec_term pm_op
    (123) empty -> .
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    RIGHTPAREN      reduce using rule 123 (empty -> .)
    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_exp_method                 shift and go to state 221
    dec_exp_s                      shift and go to state 129
    empty                          shift and go to state 130
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 197

    (120) var_id -> ID LEFTKEY dec_exp RIGHTKEY .
    (121) var_id -> ID LEFTKEY dec_exp RIGHTKEY . LEFTKEY dec_exp RIGHTKEY

    ASSIGN          reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    TIMES           reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    DIVIDE          reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    PLUS            reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    MINUS           reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    SEMICOLON       reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    COMP_LESS       reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    COMP_GREATER    reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    COMP_EQUAL      reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    COMP_NOTEQUAL   reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    COMP_AND        reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    COMP_OR         reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    COMMA           reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    RIGHTPAREN      reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    RIGHTKEY        reduce using rule 120 (var_id -> ID LEFTKEY dec_exp RIGHTKEY .)
    LEFTKEY         shift and go to state 222


state 198

    (88) dec_assign -> var_id ASSIGN hyper_call SEMICOLON .

    ID              reduce using rule 88 (dec_assign -> var_id ASSIGN hyper_call SEMICOLON .)
    INCO            reduce using rule 88 (dec_assign -> var_id ASSIGN hyper_call SEMICOLON .)
    OUTCO           reduce using rule 88 (dec_assign -> var_id ASSIGN hyper_call SEMICOLON .)
    IF              reduce using rule 88 (dec_assign -> var_id ASSIGN hyper_call SEMICOLON .)
    WHILE           reduce using rule 88 (dec_assign -> var_id ASSIGN hyper_call SEMICOLON .)
    RETURN          reduce using rule 88 (dec_assign -> var_id ASSIGN hyper_call SEMICOLON .)
    RIGHTBRACKET    reduce using rule 88 (dec_assign -> var_id ASSIGN hyper_call SEMICOLON .)


state 199

    (96) dec_read -> INCO LEFTPAREN var_id RIGHTPAREN . SEMICOLON

    SEMICOLON       shift and go to state 223


state 200

    (97) dec_write -> OUTCO LEFTPAREN write RIGHTPAREN . SEMICOLON

    SEMICOLON       shift and go to state 224


state 201

    (98) write -> print_sign write_more .

    RIGHTPAREN      reduce using rule 98 (write -> print_sign write_more .)


state 202

    (99) write_more -> COMMA . write
    (98) write -> . print_sign write_more
    (117) print_sign -> . hyper_call
    (118) print_sign -> . SIGN
    (69) hyper_call -> . h_exp
    (70) h_exp -> . s_exp ao_op
    (74) s_exp -> . dec_exp_s comp_op
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    SIGN            shift and go to state 164
    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    write                          shift and go to state 225
    print_sign                     shift and go to state 162
    hyper_call                     shift and go to state 163
    h_exp                          shift and go to state 152
    s_exp                          shift and go to state 153
    dec_exp_s                      shift and go to state 154
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 203

    (100) write_more -> empty .

    RIGHTPAREN      reduce using rule 100 (write_more -> empty .)


state 204

    (101) dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN . LEFTBRACKET dec_block RIGHTBRACKET dec_else

    LEFTBRACKET     shift and go to state 226


state 205

    (104) dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN . LEFTBRACKET dec_block RIGHTBRACKET

    LEFTBRACKET     shift and go to state 227


state 206

    (58) pm_op -> PLUS dec_exp_s .

    SEMICOLON       reduce using rule 58 (pm_op -> PLUS dec_exp_s .)
    COMP_LESS       reduce using rule 58 (pm_op -> PLUS dec_exp_s .)
    COMP_GREATER    reduce using rule 58 (pm_op -> PLUS dec_exp_s .)
    COMP_EQUAL      reduce using rule 58 (pm_op -> PLUS dec_exp_s .)
    COMP_NOTEQUAL   reduce using rule 58 (pm_op -> PLUS dec_exp_s .)
    COMP_AND        reduce using rule 58 (pm_op -> PLUS dec_exp_s .)
    COMP_OR         reduce using rule 58 (pm_op -> PLUS dec_exp_s .)
    COMMA           reduce using rule 58 (pm_op -> PLUS dec_exp_s .)
    RIGHTPAREN      reduce using rule 58 (pm_op -> PLUS dec_exp_s .)
    RIGHTKEY        reduce using rule 58 (pm_op -> PLUS dec_exp_s .)


state 207

    (59) pm_op -> MINUS dec_exp_s .

    SEMICOLON       reduce using rule 59 (pm_op -> MINUS dec_exp_s .)
    COMP_LESS       reduce using rule 59 (pm_op -> MINUS dec_exp_s .)
    COMP_GREATER    reduce using rule 59 (pm_op -> MINUS dec_exp_s .)
    COMP_EQUAL      reduce using rule 59 (pm_op -> MINUS dec_exp_s .)
    COMP_NOTEQUAL   reduce using rule 59 (pm_op -> MINUS dec_exp_s .)
    COMP_AND        reduce using rule 59 (pm_op -> MINUS dec_exp_s .)
    COMP_OR         reduce using rule 59 (pm_op -> MINUS dec_exp_s .)
    COMMA           reduce using rule 59 (pm_op -> MINUS dec_exp_s .)
    RIGHTPAREN      reduce using rule 59 (pm_op -> MINUS dec_exp_s .)
    RIGHTKEY        reduce using rule 59 (pm_op -> MINUS dec_exp_s .)


state 208

    (64) md_op -> TIMES dec_term .

    PLUS            reduce using rule 64 (md_op -> TIMES dec_term .)
    MINUS           reduce using rule 64 (md_op -> TIMES dec_term .)
    SEMICOLON       reduce using rule 64 (md_op -> TIMES dec_term .)
    COMP_LESS       reduce using rule 64 (md_op -> TIMES dec_term .)
    COMP_GREATER    reduce using rule 64 (md_op -> TIMES dec_term .)
    COMP_EQUAL      reduce using rule 64 (md_op -> TIMES dec_term .)
    COMP_NOTEQUAL   reduce using rule 64 (md_op -> TIMES dec_term .)
    COMP_AND        reduce using rule 64 (md_op -> TIMES dec_term .)
    COMP_OR         reduce using rule 64 (md_op -> TIMES dec_term .)
    COMMA           reduce using rule 64 (md_op -> TIMES dec_term .)
    RIGHTPAREN      reduce using rule 64 (md_op -> TIMES dec_term .)
    RIGHTKEY        reduce using rule 64 (md_op -> TIMES dec_term .)


state 209

    (65) md_op -> DIVIDE dec_term .

    PLUS            reduce using rule 65 (md_op -> DIVIDE dec_term .)
    MINUS           reduce using rule 65 (md_op -> DIVIDE dec_term .)
    SEMICOLON       reduce using rule 65 (md_op -> DIVIDE dec_term .)
    COMP_LESS       reduce using rule 65 (md_op -> DIVIDE dec_term .)
    COMP_GREATER    reduce using rule 65 (md_op -> DIVIDE dec_term .)
    COMP_EQUAL      reduce using rule 65 (md_op -> DIVIDE dec_term .)
    COMP_NOTEQUAL   reduce using rule 65 (md_op -> DIVIDE dec_term .)
    COMP_AND        reduce using rule 65 (md_op -> DIVIDE dec_term .)
    COMP_OR         reduce using rule 65 (md_op -> DIVIDE dec_term .)
    COMMA           reduce using rule 65 (md_op -> DIVIDE dec_term .)
    RIGHTPAREN      reduce using rule 65 (md_op -> DIVIDE dec_term .)
    RIGHTKEY        reduce using rule 65 (md_op -> DIVIDE dec_term .)


state 210

    (68) dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .

    TIMES           reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    DIVIDE          reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    PLUS            reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    MINUS           reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    SEMICOLON       reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    COMP_LESS       reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    COMP_GREATER    reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    COMP_EQUAL      reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    COMP_NOTEQUAL   reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    COMP_AND        reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    COMP_OR         reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    COMMA           reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)
    RIGHTKEY        reduce using rule 68 (dec_fact -> LEFTPAREN hyper_call RIGHTPAREN .)


state 211

    (90) dec_call_exp -> ID LEFTPAREN call_pos . RIGHTPAREN

    RIGHTPAREN      shift and go to state 228


state 212

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON . dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON
    (2) dec_vars_mult -> . dec_vars_idk
    (3) dec_vars_mult -> . empty
    (4) dec_vars_idk -> . dec_vars dec_vars_more
    (123) empty -> .
    (7) dec_vars -> . VAR vars SEMICOLON

    FUN             reduce using rule 123 (empty -> .)
    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    VAR             shift and go to state 9

    dec_vars_mult                  shift and go to state 229
    dec_vars_idk                   shift and go to state 6
    empty                          shift and go to state 7
    dec_vars                       shift and go to state 8

state 213

    (89) dec_call -> ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON .

    ID              reduce using rule 89 (dec_call -> ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON .)
    INCO            reduce using rule 89 (dec_call -> ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON .)
    OUTCO           reduce using rule 89 (dec_call -> ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON .)
    IF              reduce using rule 89 (dec_call -> ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON .)
    WHILE           reduce using rule 89 (dec_call -> ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON .)
    RETURN          reduce using rule 89 (dec_call -> ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON .)
    RIGHTBRACKET    reduce using rule 89 (dec_call -> ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON .)


state 214

    (94) call_more -> COMMA call .

    RIGHTPAREN      reduce using rule 94 (call_more -> COMMA call .)


state 215

    (71) ao_op -> COMP_AND h_exp .

    COMMA           reduce using rule 71 (ao_op -> COMP_AND h_exp .)
    RIGHTPAREN      reduce using rule 71 (ao_op -> COMP_AND h_exp .)
    SEMICOLON       reduce using rule 71 (ao_op -> COMP_AND h_exp .)


state 216

    (72) ao_op -> COMP_OR h_exp .

    COMMA           reduce using rule 72 (ao_op -> COMP_OR h_exp .)
    RIGHTPAREN      reduce using rule 72 (ao_op -> COMP_OR h_exp .)
    SEMICOLON       reduce using rule 72 (ao_op -> COMP_OR h_exp .)


state 217

    (75) comp_op -> COMP_LESS dec_exp_s .

    COMP_AND        reduce using rule 75 (comp_op -> COMP_LESS dec_exp_s .)
    COMP_OR         reduce using rule 75 (comp_op -> COMP_LESS dec_exp_s .)
    COMMA           reduce using rule 75 (comp_op -> COMP_LESS dec_exp_s .)
    RIGHTPAREN      reduce using rule 75 (comp_op -> COMP_LESS dec_exp_s .)
    SEMICOLON       reduce using rule 75 (comp_op -> COMP_LESS dec_exp_s .)


state 218

    (76) comp_op -> COMP_GREATER dec_exp_s .

    COMP_AND        reduce using rule 76 (comp_op -> COMP_GREATER dec_exp_s .)
    COMP_OR         reduce using rule 76 (comp_op -> COMP_GREATER dec_exp_s .)
    COMMA           reduce using rule 76 (comp_op -> COMP_GREATER dec_exp_s .)
    RIGHTPAREN      reduce using rule 76 (comp_op -> COMP_GREATER dec_exp_s .)
    SEMICOLON       reduce using rule 76 (comp_op -> COMP_GREATER dec_exp_s .)


state 219

    (77) comp_op -> COMP_EQUAL dec_exp_s .

    COMP_AND        reduce using rule 77 (comp_op -> COMP_EQUAL dec_exp_s .)
    COMP_OR         reduce using rule 77 (comp_op -> COMP_EQUAL dec_exp_s .)
    COMMA           reduce using rule 77 (comp_op -> COMP_EQUAL dec_exp_s .)
    RIGHTPAREN      reduce using rule 77 (comp_op -> COMP_EQUAL dec_exp_s .)
    SEMICOLON       reduce using rule 77 (comp_op -> COMP_EQUAL dec_exp_s .)


state 220

    (78) comp_op -> COMP_NOTEQUAL dec_exp_s .

    COMP_AND        reduce using rule 78 (comp_op -> COMP_NOTEQUAL dec_exp_s .)
    COMP_OR         reduce using rule 78 (comp_op -> COMP_NOTEQUAL dec_exp_s .)
    COMMA           reduce using rule 78 (comp_op -> COMP_NOTEQUAL dec_exp_s .)
    RIGHTPAREN      reduce using rule 78 (comp_op -> COMP_NOTEQUAL dec_exp_s .)
    SEMICOLON       reduce using rule 78 (comp_op -> COMP_NOTEQUAL dec_exp_s .)


state 221

    (105) dec_method -> ID DOT ID LEFTPAREN dec_exp_method . RIGHTPAREN SEMICOLON

    RIGHTPAREN      shift and go to state 230


state 222

    (121) var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY . dec_exp RIGHTKEY
    (56) dec_exp -> . dec_exp_s
    (57) dec_exp_s -> . dec_term pm_op
    (63) dec_term -> . dec_fact md_op
    (67) dec_fact -> . var_cte
    (68) dec_fact -> . LEFTPAREN hyper_call RIGHTPAREN
    (106) var_cte -> . var_id
    (107) var_cte -> . dec_call_exp
    (108) var_cte -> . var_const
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY
    (90) dec_call_exp -> . ID LEFTPAREN call_pos RIGHTPAREN
    (109) var_const -> . cte_num
    (110) var_const -> . CHAR_DEC
    (111) var_const -> . TRUE
    (112) var_const -> . FALSE
    (113) cte_num -> . CTEF
    (114) cte_num -> . CTEI
    (115) cte_num -> . MINUS CTEI
    (116) cte_num -> . MINUS CTEF

    LEFTPAREN       shift and go to state 134
    ID              shift and go to state 138
    CHAR_DEC        shift and go to state 140
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    CTEF            shift and go to state 143
    CTEI            shift and go to state 144
    MINUS           shift and go to state 145

    dec_exp                        shift and go to state 231
    dec_exp_s                      shift and go to state 157
    dec_term                       shift and go to state 131
    dec_fact                       shift and go to state 132
    var_cte                        shift and go to state 133
    var_id                         shift and go to state 135
    dec_call_exp                   shift and go to state 136
    var_const                      shift and go to state 137
    cte_num                        shift and go to state 139

state 223

    (96) dec_read -> INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON .

    ID              reduce using rule 96 (dec_read -> INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON .)
    INCO            reduce using rule 96 (dec_read -> INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON .)
    OUTCO           reduce using rule 96 (dec_read -> INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON .)
    IF              reduce using rule 96 (dec_read -> INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON .)
    WHILE           reduce using rule 96 (dec_read -> INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON .)
    RETURN          reduce using rule 96 (dec_read -> INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON .)
    RIGHTBRACKET    reduce using rule 96 (dec_read -> INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON .)


state 224

    (97) dec_write -> OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON .

    ID              reduce using rule 97 (dec_write -> OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON .)
    INCO            reduce using rule 97 (dec_write -> OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON .)
    OUTCO           reduce using rule 97 (dec_write -> OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON .)
    IF              reduce using rule 97 (dec_write -> OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON .)
    WHILE           reduce using rule 97 (dec_write -> OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON .)
    RETURN          reduce using rule 97 (dec_write -> OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON .)
    RIGHTBRACKET    reduce using rule 97 (dec_write -> OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON .)


state 225

    (99) write_more -> COMMA write .

    RIGHTPAREN      reduce using rule 99 (write_more -> COMMA write .)


state 226

    (101) dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET . dec_block RIGHTBRACKET dec_else
    (43) dec_block -> . block
    (44) dec_block -> . empty
    (45) block -> . statement block_more
    (123) empty -> .
    (48) statement -> . dec_assign
    (49) statement -> . dec_call
    (50) statement -> . dec_read
    (51) statement -> . dec_write
    (52) statement -> . dec_condition
    (53) statement -> . dec_cycle
    (54) statement -> . dec_method
    (55) statement -> . fun_return
    (88) dec_assign -> . var_id ASSIGN hyper_call SEMICOLON
    (89) dec_call -> . ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON
    (96) dec_read -> . INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON
    (97) dec_write -> . OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON
    (101) dec_condition -> . IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else
    (104) dec_cycle -> . WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET
    (105) dec_method -> . ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON
    (42) fun_return -> . RETURN dec_exp_method SEMICOLON
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY

    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    ID              shift and go to state 93
    INCO            shift and go to state 107
    OUTCO           shift and go to state 108
    IF              shift and go to state 109
    WHILE           shift and go to state 110
    RETURN          shift and go to state 111

    dec_block                      shift and go to state 232
    block                          shift and go to state 95
    empty                          shift and go to state 96
    statement                      shift and go to state 97
    dec_assign                     shift and go to state 98
    dec_call                       shift and go to state 99
    dec_read                       shift and go to state 100
    dec_write                      shift and go to state 101
    dec_condition                  shift and go to state 102
    dec_cycle                      shift and go to state 103
    dec_method                     shift and go to state 104
    fun_return                     shift and go to state 105
    var_id                         shift and go to state 106

state 227

    (104) dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET . dec_block RIGHTBRACKET
    (43) dec_block -> . block
    (44) dec_block -> . empty
    (45) block -> . statement block_more
    (123) empty -> .
    (48) statement -> . dec_assign
    (49) statement -> . dec_call
    (50) statement -> . dec_read
    (51) statement -> . dec_write
    (52) statement -> . dec_condition
    (53) statement -> . dec_cycle
    (54) statement -> . dec_method
    (55) statement -> . fun_return
    (88) dec_assign -> . var_id ASSIGN hyper_call SEMICOLON
    (89) dec_call -> . ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON
    (96) dec_read -> . INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON
    (97) dec_write -> . OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON
    (101) dec_condition -> . IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else
    (104) dec_cycle -> . WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET
    (105) dec_method -> . ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON
    (42) fun_return -> . RETURN dec_exp_method SEMICOLON
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY

    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    ID              shift and go to state 93
    INCO            shift and go to state 107
    OUTCO           shift and go to state 108
    IF              shift and go to state 109
    WHILE           shift and go to state 110
    RETURN          shift and go to state 111

    dec_block                      shift and go to state 233
    block                          shift and go to state 95
    empty                          shift and go to state 96
    statement                      shift and go to state 97
    dec_assign                     shift and go to state 98
    dec_call                       shift and go to state 99
    dec_read                       shift and go to state 100
    dec_write                      shift and go to state 101
    dec_condition                  shift and go to state 102
    dec_cycle                      shift and go to state 103
    dec_method                     shift and go to state 104
    fun_return                     shift and go to state 105
    var_id                         shift and go to state 106

state 228

    (90) dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .

    TIMES           reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    DIVIDE          reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    PLUS            reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    MINUS           reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    SEMICOLON       reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    COMP_LESS       reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    COMP_GREATER    reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    COMP_EQUAL      reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    COMP_NOTEQUAL   reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    COMP_AND        reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    COMP_OR         reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    COMMA           reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    RIGHTPAREN      reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)
    RIGHTKEY        reduce using rule 90 (dec_call_exp -> ID LEFTPAREN call_pos RIGHTPAREN .)


state 229

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult . dec_fun RIGHTBRACKET SEMICOLON
    (29) dec_fun -> . dec_fun_idk
    (30) dec_fun -> . empty
    (31) dec_fun_idk -> . fun dec_fun_more
    (123) empty -> .
    (34) fun -> . FUN fun_type fun_id LEFTPAREN param_pos RIGHTPAREN LEFTBRACKET dec_vars_mult dec_block RIGHTBRACKET

    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    FUN             shift and go to state 14

    dec_fun                        shift and go to state 234
    dec_fun_idk                    shift and go to state 11
    empty                          shift and go to state 12
    fun                            shift and go to state 13

state 230

    (105) dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN . SEMICOLON

    SEMICOLON       shift and go to state 235


state 231

    (121) var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp . RIGHTKEY

    RIGHTKEY        shift and go to state 236


state 232

    (101) dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block . RIGHTBRACKET dec_else

    RIGHTBRACKET    shift and go to state 237


state 233

    (104) dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 238


state 234

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun . RIGHTBRACKET SEMICOLON

    RIGHTBRACKET    shift and go to state 239


state 235

    (105) dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON .

    ID              reduce using rule 105 (dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON .)
    INCO            reduce using rule 105 (dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON .)
    OUTCO           reduce using rule 105 (dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON .)
    IF              reduce using rule 105 (dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON .)
    WHILE           reduce using rule 105 (dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON .)
    RETURN          reduce using rule 105 (dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON .)
    RIGHTBRACKET    reduce using rule 105 (dec_method -> ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON .)


state 236

    (121) var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .

    ASSIGN          reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    TIMES           reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    DIVIDE          reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    PLUS            reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    MINUS           reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    SEMICOLON       reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    COMP_LESS       reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    COMP_GREATER    reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    COMP_EQUAL      reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    COMP_NOTEQUAL   reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    COMP_AND        reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    COMP_OR         reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    COMMA           reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    RIGHTPAREN      reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)
    RIGHTKEY        reduce using rule 121 (var_id -> ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY .)


state 237

    (101) dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET . dec_else
    (102) dec_else -> . ELSE LEFTBRACKET dec_block RIGHTBRACKET
    (103) dec_else -> . empty
    (123) empty -> .

    ELSE            shift and go to state 241
    ID              reduce using rule 123 (empty -> .)
    INCO            reduce using rule 123 (empty -> .)
    OUTCO           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    RETURN          reduce using rule 123 (empty -> .)
    RIGHTBRACKET    reduce using rule 123 (empty -> .)

    dec_else                       shift and go to state 240
    empty                          shift and go to state 242

state 238

    (104) dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET .

    ID              reduce using rule 104 (dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET .)
    INCO            reduce using rule 104 (dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET .)
    OUTCO           reduce using rule 104 (dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET .)
    IF              reduce using rule 104 (dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET .)
    WHILE           reduce using rule 104 (dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET .)
    RETURN          reduce using rule 104 (dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 104 (dec_cycle -> WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET .)


state 239

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 243


state 240

    (101) dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else .

    ID              reduce using rule 101 (dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else .)
    INCO            reduce using rule 101 (dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else .)
    OUTCO           reduce using rule 101 (dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else .)
    IF              reduce using rule 101 (dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else .)
    WHILE           reduce using rule 101 (dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else .)
    RETURN          reduce using rule 101 (dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else .)
    RIGHTBRACKET    reduce using rule 101 (dec_condition -> IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else .)


state 241

    (102) dec_else -> ELSE . LEFTBRACKET dec_block RIGHTBRACKET

    LEFTBRACKET     shift and go to state 244


state 242

    (103) dec_else -> empty .

    ID              reduce using rule 103 (dec_else -> empty .)
    INCO            reduce using rule 103 (dec_else -> empty .)
    OUTCO           reduce using rule 103 (dec_else -> empty .)
    IF              reduce using rule 103 (dec_else -> empty .)
    WHILE           reduce using rule 103 (dec_else -> empty .)
    RETURN          reduce using rule 103 (dec_else -> empty .)
    RIGHTBRACKET    reduce using rule 103 (dec_else -> empty .)


state 243

    (85) class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON .

    CLASS           reduce using rule 85 (class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON .)
    MAIN            reduce using rule 85 (class_body -> CLASS ID dec_inherit LEFTBRACKET PRIVATE COLON dec_vars_mult dec_fun PUBLIC COLON dec_vars_mult dec_fun RIGHTBRACKET SEMICOLON .)


state 244

    (102) dec_else -> ELSE LEFTBRACKET . dec_block RIGHTBRACKET
    (43) dec_block -> . block
    (44) dec_block -> . empty
    (45) block -> . statement block_more
    (123) empty -> .
    (48) statement -> . dec_assign
    (49) statement -> . dec_call
    (50) statement -> . dec_read
    (51) statement -> . dec_write
    (52) statement -> . dec_condition
    (53) statement -> . dec_cycle
    (54) statement -> . dec_method
    (55) statement -> . fun_return
    (88) dec_assign -> . var_id ASSIGN hyper_call SEMICOLON
    (89) dec_call -> . ID LEFTPAREN call_pos RIGHTPAREN SEMICOLON
    (96) dec_read -> . INCO LEFTPAREN var_id RIGHTPAREN SEMICOLON
    (97) dec_write -> . OUTCO LEFTPAREN write RIGHTPAREN SEMICOLON
    (101) dec_condition -> . IF LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET dec_else
    (104) dec_cycle -> . WHILE LEFTPAREN hyper_call RIGHTPAREN LEFTBRACKET dec_block RIGHTBRACKET
    (105) dec_method -> . ID DOT ID LEFTPAREN dec_exp_method RIGHTPAREN SEMICOLON
    (42) fun_return -> . RETURN dec_exp_method SEMICOLON
    (119) var_id -> . ID
    (120) var_id -> . ID LEFTKEY dec_exp RIGHTKEY
    (121) var_id -> . ID LEFTKEY dec_exp RIGHTKEY LEFTKEY dec_exp RIGHTKEY

    RIGHTBRACKET    reduce using rule 123 (empty -> .)
    ID              shift and go to state 93
    INCO            shift and go to state 107
    OUTCO           shift and go to state 108
    IF              shift and go to state 109
    WHILE           shift and go to state 110
    RETURN          shift and go to state 111

    dec_block                      shift and go to state 245
    block                          shift and go to state 95
    empty                          shift and go to state 96
    statement                      shift and go to state 97
    dec_assign                     shift and go to state 98
    dec_call                       shift and go to state 99
    dec_read                       shift and go to state 100
    dec_write                      shift and go to state 101
    dec_condition                  shift and go to state 102
    dec_cycle                      shift and go to state 103
    dec_method                     shift and go to state 104
    fun_return                     shift and go to state 105
    var_id                         shift and go to state 106

state 245

    (102) dec_else -> ELSE LEFTBRACKET dec_block . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 246


state 246

    (102) dec_else -> ELSE LEFTBRACKET dec_block RIGHTBRACKET .

    ID              reduce using rule 102 (dec_else -> ELSE LEFTBRACKET dec_block RIGHTBRACKET .)
    INCO            reduce using rule 102 (dec_else -> ELSE LEFTBRACKET dec_block RIGHTBRACKET .)
    OUTCO           reduce using rule 102 (dec_else -> ELSE LEFTBRACKET dec_block RIGHTBRACKET .)
    IF              reduce using rule 102 (dec_else -> ELSE LEFTBRACKET dec_block RIGHTBRACKET .)
    WHILE           reduce using rule 102 (dec_else -> ELSE LEFTBRACKET dec_block RIGHTBRACKET .)
    RETURN          reduce using rule 102 (dec_else -> ELSE LEFTBRACKET dec_block RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 102 (dec_else -> ELSE LEFTBRACKET dec_block RIGHTBRACKET .)

